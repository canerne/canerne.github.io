<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试encrypt</title>
      <link href="/2021/06/15/%E6%B5%8B%E8%AF%95encrypt/"/>
      <url>/2021/06/15/%E6%B5%8B%E8%AF%95encrypt/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5f79692608a766f4c25360e6516f6b6fef9d1a4fd11af5c1aef5276ef00d9935">165d50f05814027fb7fe5e4ae8a088d8cabf1ea2d88ccf0f53dc7b0b289f33334c6b84ac78bdf4af50ff88140d7cd34d639fd31fa352436e51cc7f0490867711700be787e1bdaf2890e16cfaecf277ae1451803eb129d66e5d9c03fb58a9710a21d8cd80c2b1b2ae96b2dd86ba0c9aa665383719e52de661a4e06c5c50b5dde26b36f74f9d15d4d8f49a28bc71699bcb1a44bb2782e240a3e691c3e2f13684aabcea7bb6d5c2ad2ea864c66dd4de87ad6485c0c73e0b8f131058eda139c7c57038cec4b4dafd78ecd4995af2c3a135a6d4ba9362eaa7b968e7363c9b42d3392b500b4d8e1fb904473dada271bed1b1dc04fd5e935f8539c4c376c055c3410eb6766109bfc0f8c68aaa78ecb50edf4b9b6827998931c861e7b36e635ca116f5345dc5f3046b114e6b0a112d353d8dbbca81749e8573c737e6cccfcaf9a8bfe76b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作为日记加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最新发布测试</title>
      <link href="/2021/06/15/%E6%9C%80%E6%96%B0%E5%8F%91%E5%B8%83%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/06/15/%E6%9C%80%E6%96%B0%E5%8F%91%E5%B8%83%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="测试最新发布"><a href="#测试最新发布" class="headerlink" title="测试最新发布"></a>测试最新发布</h1><p>感觉还行</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在线发表测试</title>
      <link href="/2021/06/15/%E5%9C%A8%E7%BA%BF%E5%8F%91%E8%A1%A8%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/06/15/%E5%9C%A8%E7%BA%BF%E5%8F%91%E8%A1%A8%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="测试在线发布"><a href="#测试在线发布" class="headerlink" title="测试在线发布"></a>测试在线发布</h1><p>感觉还行！</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
            <tag> 番剧 </tag>
            
            <tag> 动漫推荐 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动漫推荐 01</title>
      <link href="/2021/06/13/%E5%8A%A8%E6%BC%AB%E6%8E%A8%E8%8D%90-01/"/>
      <url>/2021/06/13/%E5%8A%A8%E6%BC%AB%E6%8E%A8%E8%8D%90-01/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="6d4aae15e09ce1abbe9eb28024b2aec8b167579734a5f37c6a9a337d5d1ea7a9">73c9eb0af578e8669db95dc449dd44d9538acc1671497af0afa24cecfbc8de21b4372026215635833ae85545b83932bd6d80a2916b4de424fd2aac45d21030a9d2387ad7b60c76e0a86d011f073d286bab6249dfaada72e9bfca8080264866a09ebbe76102da21ae9d5f46a75c17464a27127f06dc8eebce255d47a93212d8cecdd87513a0090335dcc38a9b1466cab5be73d94ab3b55367988d1c740b172ddcc92d5eeb0ce0822bf95d9eb61f24becf03b92b6d6e442a1bbe27bb4c83c0f550390981a738671535ad1d581048c6d679d6e39445c549d4d8cba520725fd55945109653b9b0c5fd12d98a3a77843e24ee12c3e4ce5fae3eea76c245a44093a517e9ce076926cc01535b47e460d18afaf510b55b189396105235998353c3fde71e9e3ffdfe93e1150ce6a3880b3fe4bc5ac786ad7ce79fe00731b26a44caeadfaca1ae3f10ba9e65d85f7dfec82c58a464aaa9bc69dd2702fb8754df61a24a94bf989be5962afdb37ca7c29dbe4e620c3b90c7d746c2fcfe863ffda54b978f39ab275261fd6bee12ead4cbac706a555cbafc4f6e09958703445be529536f34ced1d79921a9cc3c5dac971009d606b9c7d92b3c9609a2d089db253745f0af2775a99442fb63c61c39df1379b887ff519a9b5251c73ecd83ca864dea20460111725a62eb5d3671e7405a785e8c9a163d997c03e7fcebb340410acb51c37e218ac9c8e47b9654382494c58ffecd5d543f4612df3fe5d4c1c5e818536fe7e4ec4975b5cc78f13f4b7ef78c00fcbc0a814cce8f1ec70057c761b88fbac91a5f9185f4eca8c22ee33494f623efb05a01fd229e36ea5fc13fbb66545cadfccdf409a29d7f33084c4b55103b954149a78cc3bd91e43c5ed852719a808209acb8e3b950ee503f7e32fd19017dd3971dd1f246250b3458372f79c943b21cab1909b211f7bb37d45bc9d71f61dc16e070a8b956f805c8dfefca721eab71ef7119c2b3e48f6118bf2acd8638d01ee0125f6efad34a3f0176db4b392a69b18b66fee077edc2cad6f171e4770f10b459db8cf2ec5f49fd772c9dec8019fd57fb0fa9a8025f200f2d030bcf477d8f1f8311fce0bab8bb72bb119bede08ad47b312d548e94c7ab9856813ef46be0323d8a6cf40e847baa8fb41b8bb6ba0db3b7016f4d084d0ba2ea6ecd04de086c9f6dc8a1622e2c8429f0ea68a0365dd6d28a33da3006fae237aef4c12e9a71bd2675e0f2501ece9cbc127b59514be7a9861009c883d08943e904e71a44c215cfe91ef35f29a05e266efc5c865bd9ae703bd7dffa364f2918c527f1d61adf03224557a1f04f9f3af294efaa05243feb3a7703c54cefa229dd44bd3c08f27d1fd97ab4df23a448735c25b809458d67a52500d739bdb37d8056f083b91ea0a22be18a14e2a9bfaa73e78378a2391b6c2be1face70bf2ced1d144711799db6ebe79d59f8352ab592b8ca37cd83b9b7fafda4073244e6c3f879182e077adfff9dc0e2e9a497ca62dd05eb1c676b6927259504156d7a82f28c75f4d2461ee37ac6db7f507ba0e0d56039dca79aef4cbe16a6478356b567e6f2b62635e64248491632ec463f4521e86bce5160fdba6a3c275abcbcf42e01a04622f771bf1553a2abb349acb019adc06c2d59fe816c055cf493f7be7ba16b1130de9b7d3d5f9bab84c3c40ded107aead1b17a838c6886a4b195977fe010e34e11cbba377e59f86974822e7fea64f4b1996fc5be0719e4ac6dde9c3fee80f122f70eae3fb1275145b9ca7601efb144f9ac62eb6504f319542c93b97658e55b2a7f355e2cfe1dad1591d9796ebca5cac821db5880edb1d903cea1ab9e3ca47d813290c4a4714e4490e8209749216ff511db45de1d9f8a8ab26a181f2b09d3a39838c078244e784f8a5eb92cd12e4d57eb8878e98b3ecddee1a3b3d09d4b82e802d169b9efae5046de246916bd6f081ce963d5c68b40e35ecffba804d7319a62b870f17bc7d256e42e9f704a72eab6c9b0b3ae1d427337191f0fe4ed57972d6de8776ffd1f06cb7e810ce4b9628f8a6fb6a1f686bcec6f56c09edb404ce6b3cf6eb5d604ad852b36ea6b3708348d3d764f1f2ccfa9d812684ae0056615bcb3f2d1f6ad8931d097f0c069bc49f626f3bd0ec944eb0de08a38af4a018d02cdf17932f642c76ee0cdef60489b02ca037d26722d16fb7ce2033758dc0e3305c17fb2e658be5f78ccb9533e883e055c7631be2e2040704bdbb47d1c670d016c69894882765a6266f316882008f39ef7d8f7dc412d44720c263c5614e4d1d9a1b20405f861585ac2365b8a646e325132a0ee3f3f6085a6df857871026e1ae07f7b3d72b5594d4ac7fa3e2510ade5a4f63b631456a12f063547d7227d08814475955c7332bb7bcccadb9edcf4fab5b22dbf363235172e7554f586</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码才能查看哦.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> -动漫推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL练习题</title>
      <link href="/2021/06/13/SQL%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
      <url>/2021/06/13/SQL%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="SQL语句练习题"><a href="#SQL语句练习题" class="headerlink" title="SQL语句练习题"></a>SQL语句练习题</h3><pre><code>第一步:创建数据库company    create databases company;第二步:创建表               &lt;1&gt; 创建部门表        create table dept(        deptno INT PRIMARY KEY,    #部门编号,主键        dname VARCHAR(20),    #部门名称        loc VARCHAR(20)        #部门所在地区        )    &lt;2&gt; 创建员工表        create table emp(        empno INT PRIMARY KEY,    #员工编号,主键        ename VARCHAR(20) NOT NULL, #员工名称        job VARCHAR(20),        #员工的工作        mgp INT ,           #上级编号        hiredate DATETIME ,       #员工入职日期        sal DECIMAL(10,2),       #员工的工资        comm DECIMAL(10,2),       # 员工奖金        parent_deptno INT, #员工所属的部门,相当于一个外键        foreign key (parent_deptno) references dept(deptno)        )第三步: 插入数据        部门表内插入数据    INSERT INTO dept VALUES (10,&#39;会计部&#39;,&#39;纽约&#39;);    INSERT INTO dept VALUES (20,&#39;调查部&#39;,&#39;北京&#39;);    INSERT INTO dept VALUES (30,&#39;销售部&#39;,&#39;墨西哥&#39;);    INSERT INTO dept VALUES (40,&#39;运营部&#39;,&#39;杭州&#39;);    员工表内插入数据    insert into emp values(7369,&#39;张三&#39;,&#39;CLERK&#39;,7902,&#39;1980-12-17&#39;,1640,NULL,20);    insert into emp values(7499,&#39;李四&#39;,&#39;SALESMAN&#39;,7698,&#39;1981-2-20&#39;,11400,300,30);    insert into emp values(7521,&#39;王五&#39;,&#39;SALESMAN&#39;,7698,&#39;1981-2-22&#39;,5200,500,30);    insert into emp values(7566,&#39;赵六&#39;,&#39;MANAGER&#39;,7839,&#39;1981-4-2&#39;,7015,NULL,20);    insert into emp values(7654,&#39;郭三&#39;,&#39;SALESMAN&#39;,7698,&#39;1981-9-28&#39;,5200,1400,30);    insert into emp values(7698,&#39;郭四&#39;,&#39;MANAGER&#39;,7839,&#39;1981-5-1&#39;,5900,NULL,30);    insert into emp values(7782,&#39;郭五&#39;,&#39;MANAGER&#39;,7839,&#39;1981-6-9&#39;,2470,NULL,10);    insert into emp values(7788,&#39;郭六&#39;,&#39;ANALYST&#39;,7566,&#39;1987-4-19&#39;,3040,NULL,20);    insert into emp values(7844,&#39;麻三&#39;,&#39;SALESMAN&#39;,7698,&#39;1980-12-17&#39;,6200,0,30);    insert into emp values(7876,&#39;麻四&#39;,&#39;CLERK&#39;,7788,&#39;1981-9-8&#39;,2240,NULL,20);    insert into emp values(7900,&#39;麻五&#39;,&#39;CLERK&#39;,7698,&#39;1987-5-23&#39;,4000,NULL,30);    insert into emp values(7902,&#39;麻六&#39;,&#39;ANALYST&#39;,7566,&#39;1981-12-3&#39;,3040,NULL,20);    insert into emp values(7934,&#39;麻七&#39;,&#39;CLERK&#39;,7782,&#39;1982-12-3&#39;,2620,NULL,10);</code></pre><p>问题：<br>    &lt;1&gt; 查询所有的部门信息。</p><pre><code>&lt;2&gt; 查询所有的员工信息    &lt;3&gt; 查询部门编号为20的所有员工信息。&lt;4&gt; 查询部门编号不为20的所有员工信息。&lt;5&gt; 查询部门编号为20和部门编号为10的所有的员工信息。&lt;6&gt; 查询所有工种为CLERK的员工的员工号、员工名和部门号。&lt;7&gt; 查询工资在5000到7000的所有的员工的信息&lt;8&gt; 查询工资在1000到3000,或者5000到7000的所有的员工的信息&lt;9&gt; 查询不属于部门编号为10和20的所有的员工信息&lt;10&gt; 查询奖金高于工资的20%的员工信息。&lt;11&gt; 查询10号部门中工种为MANAGER和20号部门中工种为CLERK的员工的信息。    &lt;12&gt; 查询所有工种不是MANAGER和CLERK,且工资大于或等于2000的员工的详细信息。&lt;13&gt; 查询有奖金的员工的不同工种。&lt;14&gt; 查询没有奖金或奖金低于100的员工信息。&lt;15&gt; 查询所有的以1981年开头的所有的员工信息。&lt;16&gt; 查询所有姓李的员工姓名&lt;17&gt; 查询员工姓名的第二个字为&quot;家&quot;的员工信息&lt;18&gt; 查询没有奖金的员工信息&lt;19&gt; 查询员工工资最高的员工信息。&lt;20&gt; 查询每个部门中工资最高的员工信息,包括员工编号,员工姓名,员工工资    &lt;21&gt; 查询员工中工资最低的工资是多少    &lt;22&gt; 查询部门编号为10的所有员工的工资总和    &lt;23&gt; 查询本公司的平均工资&lt;24&gt; 查询本公司的员工个数    &lt;25&gt; 查询每个部门的平均工资&lt;26&gt; 查询每个部门的员工个数&lt;27&gt; 查询每个员工的工资少于500块钱后的结果&lt;28&gt; 查询出每个部门的平均工资大有5000元的部门&lt;29&gt; 查询出每个部门的员工个数大于2个人的&lt;30&gt; 查询部门编号是10的所有员工信息并且将工资降序排序    &lt;31&gt; 查询部门编号是30的所有员工信息并且将工资升序排序&lt;32&gt; 查询所有员工信息并按照入职降序排序    &lt;33&gt; 查询员工的姓名和入职日期，并按入职日期从先到后进行排序&lt;34&gt; 显示所有员工的姓名、工种、工资和奖金，按工种降序排序，若工种相同则按工资升序排序，     如果工资还相同,那么按照奖金降序排序。&lt;35&gt; 查询工资最高的前3个员工&lt;36&gt; 查询员工表中第3条记录到第7记录&lt;37&gt; 查询员工表中的部门编号&lt;38&gt; 查询员工表中的部门编号和员工名称&lt;39&gt; 查询雇员表中工资最高的雇员的员工号、员工姓名、工资和部门号。&lt;40&gt; 查询每个部门下工资最高的员工姓名、薪水、部门编号&lt;41&gt; 查询工资比郭三员工工资高的所有员工信息。&lt;42&gt; 查询部门编号为30的员工的最高工资和部门编号为10的员工的最低工资&lt;43&gt; 查询部门编号为30的并且按照工资降序排序的员工和部门编号为10的并且工资升序的员工</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20个最常用的正则表达式</title>
      <link href="/2021/06/13/20%E4%B8%AA%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2021/06/13/20%E4%B8%AA%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="一、20个最常用的正则表达式"><a href="#一、20个最常用的正则表达式" class="headerlink" title="一、20个最常用的正则表达式"></a>一、20个最常用的正则表达式</h2><pre><code class="JavaScript">#1 . 校验密码强度：密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$#2. 校验中文：字符串仅能是中文^[\\u4e00-\\u9fa5]{0,}$# 3. 由数字、26个英文字母或下划线组成的字符串：^\\w+$#4. 校验E-Mail 地址：同密码一样，下面是E-mail地址合规性的正则检查语句。[\\w!#$%&amp;&#39;*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&amp;&#39;*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w#5. 校验身份证号码：下面是身份证号码的正则校验。15 或 18位。#15位^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$#18位^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$#6. 校验日期：“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年。^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$#7. 校验金额：金额校验，精确到2位小数。^[0-9]+(.[0-9]{2})?$#8. 校验手机号：下面是国内 13、15、18开头的手机号正则表达式。^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$#9. 判断IE的版本：IE目前还没被完全取代，很多页面还是需要做版本兼容，下面是IE版本检查的表达式。^.*MSIE [5-8](?:\\.[0-9]+)?(?!.*Trident\\/[5-9]\\.0).*$#10. 校验IP-v4地址：IP4 正则语句\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b#11. 校验IP-v6地址：IP6 正则语句。(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))#12. 检查URL的前缀：应用开发中很多时候需要区分请求是HTTPS还是HTTP，通过下面的表达式可以取出一个url的前缀然后再逻辑判断。if (!s.match(/^[a-zA-Z]+:\\/\\//)){ s = &#39;http://&#39; + s;}#13. 提取URL链接：下面的这个表达式可以筛选出一段文本中的URL。^(f|ht){1}(tp|tps):\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&amp;=]*)?#14. 文件路径及扩展名校验：下面的这个表达式可以筛选出一段文本中的URL。^(f|ht){1}(tp|tps):\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&amp;=]*)?#14. 文件路径及扩展名校验：验证文件路径和扩展名^([a-zA-Z]\\:|\\\\)\\\\([^\\\\]+\\\\)*[^\\/:*?&quot;&lt;&gt;|]+\\.txt(l)?$#15. 提取Color Hex  Codes：有时需要抽取网页中的颜色代码，可以使用下面的表达式。\\#([a-fA-F]|[0-9]){3,6}#16. 提取网页图片：假若你想提取网页中所有图片信息，可以利用下面的表达式。\\&lt; *[img][^\\&gt;]*[src] *= *[\\&quot;\\&#39;]{0,1}([^\\&quot;\\&#39;\\ &gt;]*)#17. 提取页面超链接：提取html中的超链接。(&lt;;a\\s*(?!.*\\brel=)[^&gt;;]*)(href=&quot;https?://)((?!(?:(?:www\\.)?&#39;.implode(&#39;|(?:www\\.)?&#39;, $follow_list)#18. 精炼CSS：通过下面的表达式，可以搜索相同属性值的CSS，从而达到精炼代码的目的。^\\s*[a-zA-Z\\-]+\\s*[:]{1}\\s[a-zA-Z0-9\\s.#]+[;]{1}#19. 抽取注释：如果你需要移除HMTL中的注释，可以使用如下的表达式。&lt;!--(.*?)--&gt; #20. 匹配HTML标签：通过下面的表达式可以匹配出HTML中的标签。&lt;/?\\w+((\\s+\\w+(\\s*=\\s*(?:&quot;.*?&quot;|&#39;.*?&#39;|[\\^&#39;&quot;&gt;\\s]+))?)+\\s*|\\s*)/?&gt;</code></pre><h2 id="二、校验数字表达式"><a href="#二、校验数字表达式" class="headerlink" title="二、校验数字表达式"></a>二、校验数字表达式</h2><pre><code class="javascript">1 数字：^[0-9]*$ 2 n位的数字：^\d{n}$3 至少n位的数字：^\d{n,}$ 4 m-n位的数字：^\d{m,n}$ 5 零和非零开头的数字：^(0|[1-9][0-9]*)$ 6 非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$ 7 带1-2位小数的正数或负数：^(\-)?\d+(\.\d{1,2})?$ 8 正数、负数、和小数：^(\-|\+)?\d+(\.\d+)?$ 9 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$10 有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$11 非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^\+?[1-9][0-9]*$12 非零的负整数：^\-[1-9][]0-9&quot;*$ 或 ^-[1-9]\d*$13 非负整数：^\d+$ 或 ^[1-9]\d*|0$14 非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$15 非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$16 非正浮点数：^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$17 正浮点数：^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$18 负浮点数：^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$19 浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$</code></pre><h2 id="三、校验字符的表达式"><a href="#三、校验字符的表达式" class="headerlink" title="三、校验字符的表达式"></a>三、校验字符的表达式</h2><pre><code class="javascript">1 汉字：^[\u4e00-\u9fa5]{0,}$ 2 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$ 3 长度为3-20的所有字符：^.{3,20}$ 4 由26个英文字母组成的字符串：^[A-Za-z]+$ 5 由26个大写英文字母组成的字符串：^[A-Z]+$ 6 由26个小写英文字母组成的字符串：^[a-z]+$ 7 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$ 8 由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w{3,20}$ 9 中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$10 中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$11 可以输入含有^%&amp;&#39;,;=?$\&quot;等字符：[^%&amp;&#39;,;=?$\x22]+12 禁止输入含有~的字符：[^~\x22]+</code></pre><h2 id="四、特殊需求表达式"><a href="#四、特殊需求表达式" class="headerlink" title="四、特殊需求表达式"></a>四、特殊需求表达式</h2><pre><code class="Javascript">1 Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$ 2 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.? 3 InternetURL：[a-zA-z]+://[^\s]* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*)?$ 4 手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$ 5 电话号码(&quot;XXX-XXXXXXX&quot;、&quot;XXXX-XXXXXXXX&quot;、&quot;XXX-XXXXXXX&quot;、&quot;XXX-XXXXXXXX&quot;、&quot;XXXXXXX&quot;和&quot;XXXXXXXX)：^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$  6 国内电话号码(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7} 7 身份证号(15位、18位数字)：^\d{15}|\d{18}$ 8 短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$ 9 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$10 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w{5,17}$11 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$12 日期格式：^\d{4}-\d{1,2}-\d{1,2}13 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$14 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$15 钱的输入格式：16 1.有四种钱的表示形式我们可以接受:&quot;10000.00&quot; 和 &quot;10,000.00&quot;, 和没有 &quot;分&quot; 的 &quot;10000&quot; 和 &quot;10,000&quot;：^[1-9][0-9]*$17 2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符&quot;0&quot;不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$18 3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$19 4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$20 5.必须说明的是,小数点后面至少应该有1位数,所以&quot;10.&quot;是不通过的,但是 &quot;10&quot; 和 &quot;10.2&quot; 是通过的：^[0-9]+(.[0-9]{2})?$21 6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$22 7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$23 8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$24 备注：这就是最终结果了,别忘了&quot;+&quot;可以用&quot;*&quot;替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里25 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$26 中文字符的正则表达式：[\u4e00-\u9fa5]27 双字节字符：[^\x00-\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))28 空白行的正则表达式：\n\s*\r (可以用来删除空白行)29 HTML标记的正则表达式：&lt;(\S*?)[^&gt;]*&gt;.*?&lt;/\1&gt;|&lt;.*? /&gt; (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)30 首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)31 腾讯QQ号：[1-9][0-9]{4,} (腾讯QQ号从10000开始)32 中国邮政编码：[1-9]\d{5}(?!\d) (中国邮政编码为6位数字) 33 IP地址：\d+\.\d+\.\d+\.\d+ (提取IP地址时有用) 34 IP地址：((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础</title>
      <link href="/2021/06/13/Python%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/06/13/Python%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>python </p><p>#写入文件</p><pre><code>data = &#39;我是一个靓仔&#39;with open(&#39;我是一个文件.txt&#39;,&#39;w&#39;) as f:#这个f的意思就是起了个名字      f.write(data)#逐行写入      &#39;为什么推荐用with写法？&#39;&#39;因为with 可以自动关闭文件&#39;&#39;防止手残,属于python的语法糖&#39;</code></pre><p>#函数的传递 与调用</p><pre><code>def liangzai(data):    print(data)#输出dataif __name__ == &quot;__main__&quot;:#程序的入口 也就是主函数    data = &#39;靓仔&#39;    liangzai(data)#传入data</code></pre><p> #字典</p><pre><code>data = {&#39;一个&#39;:&#39;靓仔&#39;,&#39;编程&#39;:&#39;程序员&#39;}print(data[&#39;一个&#39;])print(data[&#39;编程&#39;])</code></pre><p>#字符串替换</p><pre><code>data = &#39;一个靓仔&#39;new_data = &#39;我是{}&#39;.format(data)#注意 format只和{}替换print(new_data)&#39;强烈推荐用.format写法&#39;&#39;特殊要求才用原始写法 % &#39;data = &#39;一个靓仔&#39;new_data = &#39;我是%s&#39;%dataprint(new_data)</code></pre><p>#新建文件夹</p><pre><code>import osdata = &#39;我是一个靓仔&#39;if not os.path.exists(data):#如果没有这个文件夹      os.makedirs(data)#就创建</code></pre><p>#迭代</p><pre><code>for i in range(0,10,2):   print(i)#0，2，4，6，8</code></pre><p>#文字加密</p><pre><code>from uuid import uuid4print(uuid4())</code></pre><p>#文字解析</p><pre><code>from urllib import parse#解析data = &#39;我是一个靓仔&#39;new_data = parse.quote(data)print(new_data)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql语法</title>
      <link href="/2021/06/13/Mysql%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/06/13/Mysql%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>MySQL：</p><p>[^小伟丫]: </p><pre><code class="mysql">\c #放弃 当前执行代码</code></pre><p>建数据库（指定字符集）</p><pre><code class="mysql">create database shop(数据库名) charset utf8;</code></pre><p>进入数据库</p><pre><code class="mysql">show database; # 显示所有数据库drop database shop; #删除指定数据库//增加条件删除(减少报错)drop database if exists shop; # 如果存在就删除</code></pre><p>查看数据库结构</p><pre><code class="mysql">show create database shop; # 查看数据库结构desc 表名;# 查看表结构</code></pre><p>建表</p><pre><code class="mysql">create table 表名(id int PRIMARY KEY AUTO_INCREMNT,cname varchar(30),description varchar(100)) charset utf8; #指定表编码（如果不指定默认继承数据库编码）desc 表名;# 查看结构 （SQLyog）drop table if EXISTS 表名;</code></pre><p>建表尝试</p><pre><code class="mysql">CREATE TABLE &#39;tb_student&#39;(&#39;sid&#39; INT(4) ZEROFILL);CREATE TABLE &#39;tb_student&#39;(&#39;sid&#39; INT(4) ZEROFILL);</code></pre><p>插入数据</p><pre><code class="mysql">insert into 表名 value(数据1),(数据2);# 仅限于单列 时可添加多条数据;insert into 表名(字段名列表) values(值列表1),(值列表2);#添加多条;/*以上句式在MySQL中不支持*/create table 新表(select 字段1,字段2,...from 原表);</code></pre><p>查看表</p><pre><code class="mysql">select * from 表名;# 查看某个表数据show create table 表名; #查看表注释</code></pre><p>出现乱码情况</p><pre><code class="mysql">set character_set_client=gbk; #设置编码set character_set_results=gbk; #设置乱码set names gbk; </code></pre><p>修改表</p><pre><code class="mysql">alter table `旧表` rename `新表`; # 修改表名</code></pre><p>添加字段</p><pre><code class="mysql">alter table 表名 add 字段名 类型; # 添加字段</code></pre><p>修改字段</p><pre><code class="mysql">/*修改字段名*/alter table 表名 change 修改字段 修改后字段 char(10) 属性; # 修改字段</code></pre><p>删除字段</p><pre><code class="mysql">/*删除字段*/alter table 表名 drop 字段名; # 删除字段</code></pre><p>添加主键约束</p><pre><code class="mysql">alter table 表名 add constraint 主键名 primary key 表名(主键字段); </code></pre><p>添加外键约束</p><pre><code class="mysql">ALTER TABLE pet外键表 ADD CONSTRAINT fk_typeId外键名 FOREIGN KEY (typeId)外键idREFERENCES pettype主键表(id)主键id</code></pre><p>将查询结果插入到新表</p><pre><code class="mysql">insert into 新表(字段1,字段2,....)select 字段1,字段2,....from 原表;</code></pre><p>更新数据记录</p><pre><code class="mysql">update 表名 set 字段1=值,字段2=值,...,where 条件;delete from 表名 where 条件(字段=值);</code></pre><p>高级查询</p><pre><code class="mysql">select 字段1,字段2,字段3 from 表名where 条件(字段=值)order by 字段(学号);# 升序</code></pre><p>添加外键事例：</p><pre><code class="mysql">#pet 主人id 外键ALTER TABLE `pet` ADD CONSTRAINT `fk_owner_id` FOREIGN KEY (`owner_id`) REFERENCES `petwner` (`id`);#pet 商店id 外键ALTER TABLE `pet` ADD CONSTRAINT `fk_store_id` FOREIGN KEY (`store_id`) REFERENCES `petstore`(id);#account 账目表 宠物外键ALTER TABLE `account` ADD CONSTRAINT `fk_pet_id` FOREIGN KEY (`pet_id`) REFERENCES `pet`(id);#account 账目表 买家id 外键ALTER TABLE `account` ADD CONSTRAINT `fk_seller_id` FOREIGN KEY (`seller_id`) REFERENCES `petwner`(id);#account 账目表 卖家id 外键ALTER TABLE `account` ADD CONSTRAINT `fk_buyer_id` FOREIGN KEY (`buyer_id`) REFERENCES `petwner`(id);</code></pre><p>查看表结构：</p><pre><code class="mysql">SHOW CREATE TABLE account(表名);</code></pre><p>特殊类型:</p><pre><code class="mysql">TIMESTAMP #时间decimal #money</code></pre><p>创建本地用户 指定 库：</p><pre><code class="mysql">/*创建本地用户epet,密码0000*/GRANT ALL ON petShop.* TO `epet`@`localhost` IDENTIFIED BY &#39;0000&#39;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql事务</title>
      <link href="/2021/06/13/Mysql%E4%BA%8B%E5%8A%A1/"/>
      <url>/2021/06/13/Mysql%E4%BA%8B%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="事务："><a href="#事务：" class="headerlink" title="事务："></a>事务：</h3><p>事务必须具备以下四个属性，简称ACID属性</p><p>原子性 (Atomicity)</p><pre><code class="mysql">##事务是一个完整的操作，事务的各步操作是不可分的(原子的),要么都执行,要么都不执行</code></pre><p>一致性（Consistency)</p><pre><code class="mysql">##当事务完成时，数据必须处于一致状态</code></pre><p>隔离性（Isolation）</p><pre><code class="mysql">##并发事务之间隔离,独立，他不应该以任何方式依赖于或影响其他事务</code></pre><p>持久性（Durability）</p><pre><code class="mysql">##事务完成后,他对数据库的修改被永远保存</code></pre><p>视图：</p><pre><code class="mysql">/*开启事务*/BEGIN;#手动开启事务start transaction/*提交事务，写入硬盘，永久保存*/COMMIT;#手动关闭事务#不设置自动提交  0 关闭   1 开启SET autocommit=0;##创建视图create view 视图名as 查询语句##删除视图drop view 视图名##查看视图select * from 视图名#查看所有视图use 数据库select * from viues;</code></pre><p>索引:</p><pre><code class="Mysql">#使用比较频繁的列  需要 索引#添加索引   普通索引CREATE INDEX index_ename ON emp(ename)    #删除 索引 DROP INDEX index_ename ON emp;#查看索引SHOW INDEX FROM emp;#主键索引 不允许重复 不允许为空#唯一 索引 不允许重复 允许为nullCREATE UNIQUE INDEX index_job ON emp(job)#组合索引  可以重复  允许为空CREATE INDEX index_ename_job ON emp(ename,job)</code></pre><p>备份：</p><pre><code class="Mysql">##备份数据库mysqldump -uroot -proot 数据库名&gt;D:\\要保存的名字.sql##备份表mysqldump -uroot -proot 数据库名 表名&gt;D:\\表名.sql##备份多表mysqldump -uroot -proot 数据库名 表名 表名&gt;D:\\表名.sql##恢复备份mysql -u root -p 数据库名 &lt; 原数据位置.sql##恢复数据use 选择数据库source 备份表名地址.sql</code></pre><p>导出查询数据:</p><pre><code class="Mysql">##导出#查询语句xxxxxx #查询语句into outfile &#39;路径&#39; # D:/表名.txt#导入load data infile &quot;文件路径&quot; into table 表名</code></pre><p>MySQL(PassWord)加密格式:</p><pre><code class="mysql">##mysql5加密     例：*23AE809DDACAF96AF0FD78ED04B6A265E05AA257</code></pre><p>设置用户权限:</p><pre><code class="mysql">##设置权限GRANT ALL ON *.*TO `小伟`@`localhost`IDENTIFIED  BY &#39;123&#39;##刷新权限FLUSH PRIVILEGES  #改用户密码mysqladmin -u root -p paddword &quot;新密码&quot;#改其他账户密码set password for 用户名 =password(&quot;新密码&quot;);#设置当前账户的密码set password=password(&quot;新密码&quot;);</code></pre><p>MySQL:</p><pre><code class="mysql"># 同时修改 一 表  同一字段的 多个 数据 分别修改UPDATE dog SET `name` = CASE  idWHEN 1 THEN &#39;大花&#39; WHEN 2 THEN &#39;大旺财&#39; WHEN 3 THEN &#39;大土狗&#39; END WHERE id IN (1,2,3) </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql命令</title>
      <link href="/2021/06/13/Mysql%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/06/13/Mysql%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL命令"><a href="#MySQL命令" class="headerlink" title="MySQL命令"></a>MySQL命令</h2><p>[TOC]</p><p>[^小伟]: </p><h5 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h5><pre><code>net stop mysql //停止服务</code></pre><h5 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h5><pre><code>net start mysql //启动服务</code></pre><h5 id="连接命令"><a href="#连接命令" class="headerlink" title="连接命令"></a>连接命令</h5><pre><code>mysql -h服务器主机地址 -u用户名 -p密码mysql -u root -p rootmysql -u root -pexit 退出</code></pre><h5 id="查询版本"><a href="#查询版本" class="headerlink" title="查询版本"></a>查询版本</h5><pre><code>select version(),user();</code></pre><h5 id="数据库语句"><a href="#数据库语句" class="headerlink" title="数据库语句"></a>数据库语句</h5><pre><code>create database myschool;创建     数据库    名称show databases //显示数据库use myschool;//选择数据库drop database myschool;//删除数据库</code></pre><h5 id="数据库提示语句"><a href="#数据库提示语句" class="headerlink" title="数据库提示语句"></a>数据库提示语句</h5><pre><code class="mysql">Qyery OK ：SQL语句执行成功1 row affected ：操作影响的行数0.012sec ：操作执行时间Unknown database &#39;mybase&#39;：数据库不存在Database changed : 选择数据库成功</code></pre><h5 id="数据库工具"><a href="#数据库工具" class="headerlink" title="数据库工具"></a>数据库工具</h5><pre><code>SQLyog-图形化的MySQL管理工具</code></pre><h5 id="关系图"><a href="#关系图" class="headerlink" title="关系图"></a>关系图</h5><table><thead><tr><th><strong>符号</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20200518113711214.png" alt="image-20200518113711214"></td><td><strong>实体，一般是名词</strong></td></tr><tr><td><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20200518113723540.png" alt="image-20200518113723540"></td><td><strong>属性，一般是名词</strong></td></tr><tr><td><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20200518113737563.png" alt="image-20200518113737563"></td><td><strong>关系，一般是动词</strong></td></tr></tbody></table><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20200518113757897.png" alt="image-20200518113757897"></p><h5 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h5><pre><code class="mysql">ZEROFILL # 自补充 限制输入负数 补位 约束 数值只能为正数unsigned # 标识 无符号 不能为负数PRIMARY KEY # 设置 为 主键AUTO_INCREMENT # 自增加一DEFAULT # 默认约束COMMENT # 注释声明EXISTS # 存在constraint # 主键references # 外键</code></pre><h5 id="高级查询"><a href="#高级查询" class="headerlink" title="高级查询"></a>高级查询</h5><pre><code class="mysql">#查询#limit 参数1(int) 取前几条SELECT studentName,phone,address FROM studentORDER BY studentNo DESCLIMIT 4#limit 参数1(int),参数2(int) 截取位置(开始位置,结束位置)SELECT gradeId,studentName,phone,address,bornDate,email,pwd,sex FROM studentORDER BY studentNo DESCLIMIT 2,2 #截取到跳过 2个后的2个asc 升序desc 降序/*聚合函数*/# concat 字符串拼接SELECT CONCAT(&#39;My&#39;,&#39;S&#39;,&#39;QL&#39;)# insert 替换字符串(参数1，参数2，参数3,参数4)(原字符串,从第几位开始,替换个数,替换对象(新字符串))SELECT INSERT(&#39;这是SqL Server数据库&#39;,3,10,&#39;MySql&#39;)# 转大写SELECT LOWER(&#39;ABC&#39;)# 转小写SELECT UPPER(&#39;abc&#39;)# substring 截取(参数1,参数2,参数3)(原字符串,开始下标,开始下标后的多少位)SELECT SUBSTRING(&#39;JavaMySQLOracle&#39;,5,5)SELECT SUBSTRING(&#39;asdasd&#39;,3)# ----时间日期函数-----# curDate 获取当前时间 (年月日)SELECT CURDATE()# CURTIME 获取当前时间 (时分秒)SELECT CURTIME()# now 获取当前时间 年月日 时分秒SELECT NOW()# week(date) date参数是时间格式 获取一年中的第几周SELECT WEEK(&#39;2020-1-17&#39;)+1# 获取年 月 日 时 分 秒SELECT YEAR(NOW()) # 年SELECT MONTH(NOW()) # 月SELECT DAY(NOW()) # 日SELECT HOUR(NOW()) # 时SELECT MINUTE(NOW()) # 分SELECT SECOND(NOW()) # 秒# DATEDIFF 求天数差 (参数1,参数2)SELECT DATEDIFF(NOW(),&#39;2008-01-1&#39;)# ADDDDATE (参数1,参数2) 参数1 基础时间 参数2 添加天数SELECT ADDDATE(NOW(),30)# CEIL 向上取整 (返回大于或者等于自己的整数)SELECT CEIL(8.1)# floor 向下取整 (返回小于或者等于自己的整数)SELECT FLOOR(9.9)# rand 返回 0 - 1之间的随机数SELECT RAND()truncate # 重置自增</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql快捷键</title>
      <link href="/2021/06/13/Mysql%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2021/06/13/Mysql%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL快捷键"><a href="#MySQL快捷键" class="headerlink" title="MySQL快捷键"></a>MySQL快捷键</h2><p>连接<br>Ctrl+M    创建新连接<br>Ctrl+N    以当前连接属性创建新连接<br>Ctrl+F4/Ctrl+W    断开当前连接<br>Ctrl+Tab    切换到下一个连接<br>Ctrl+Shift+Tab    切换到上一个连接<br>Ctrl+1…8    选择连接（1到8）<br>Ctrl+9    选择最后一个连接</p><p>对象浏览器<br>F5    刷新对象浏览器（默认）<br>Ctrl+B    切换焦点至对象浏览器</p><p>SQL窗口<br>Ctrl+T    新查询窗口<br>Ctrl+E    切换焦点至SQL窗口<br>Ctrl+Y    重做<br>Ctrl+Z    撤销<br>Ctrl+X    剪切<br>Ctrl+V    粘贴<br>Ctrl+H    替换<br>Ctrl+G    转到<br>Ctrl+O    打开文件<br>Ctrl+Shift+U    将选中部分变为大写<br>Ctrl+Shift+L     将选中部分变为小写<br>Ctrl+Shift+C     在SQL窗口中对选中部分标注<br>Ctrl+Shift+R     删除选中部分的注释<br>Ctrl+Shift+T     插入模板<br>Ctrl+Space    列出所有标记<br>Ctrl+Enter    列出匹配的标签<br>Ctrl+Shift+Space    列出函数和路由参数</p><p>查询执行<br>F8    执行当前查询并编辑结果<br>F9    执行查询（默认）<br>Ctrl+F9            Execute All Query(s) (Default)</p><p>SQL格式程序<br>F12    格式化当前查询<br>Ctrl+F12    格式化选中的查询<br>Shift+F12    格式化所有查询</p><p>粘贴SQL语句<br>Alt+Shift+I    插入语句<br>Alt+Shift+U    更新语句<br>Alt+Shift+D    删除语句<br>Alt+Shift+S    查询语句</p><p>结果<br>F11    插入更新窗口<br>Ctrl+R    将焦点切换至结果面板中的当前标签页<br>Ctrl+L    切换结果窗口/表数据为数据表格/文字模式<br>Ctrl+Alt+C    导出表数据为CSV，Excel，SQL等…<br>Ctrl+Alt+E    备份数据库为SQL转储<br>Ctrl+Shift+M    从CSV导入数据<br>Ctrl+Shift+E    导出结果集<br>Ctrl+Space    打开外键查找<br>Alt+1…8    选择结果窗口里的标签页（1到8）<br>Alt+9    选择结果窗口里的最后一个标签页</p><p>显示/隐藏<br>Ctrl+Shift+1    显示/隐藏对象浏览器<br>Ctrl+Shift+2    显示/隐藏结果面板<br>Ctrl+Shift+3    显示/隐藏查询窗口</p><p>数据库/表<br>Ctrl+D    创建数据库<br>F6    修改数据库/表结构/索引/视图/存储过程/函数/触发器/事件<br>F2    重命名表/视图/触发器/事件<br>Shift+Del    截断数据库/表<br>F7    管理索引窗口<br>F10    关系/外键<br>Ctrl+Alt+R    重新排序列<br>Ctrl+Alt+T    表诊断<br>Ctrl+Alt+F    输出对话框<br>Ctrl+Shift+Alt+S    以HTML形式创建数据库结构<br>Ctrl+Shift+Q    执行SQL脚本</p><p>工具<br>Ctrl+Alt+W     数据库同步向导<br>Ctrl+Q     架构同步工具<br>Ctrl+Alt+O     导入外部数据向导<br>Ctrl+Alt+N    通知服务向导<br>Ctrl+Alt+S    计划备份向导<br>Ctrl+K    查询创建器<br>Ctrl+Alt+D    架构设计器<br>Ctrl+Shift+D    数据搜索</p><p>用户管理<br>Ctrl+U    打开用户管理器</p><p>书签<br>Ctrl+Shift+F    添加当前SQL至收藏</p><p>其他<br>F1    帮助<br>Ctrl+Shift+H    打开历史记录标签<br>Ctrl+Shift+I    打开信息标签页<br>Ctrl+C    复制<br>Ctrl+A    全选<br>Ctrl+F    查找（SQL窗口/结果窗口和文字模式表数据/Blob查看器）<br>F3    查找下一个（SQL窗口/结果窗口和文字模式表数据/Blob查看器）<br>Ctrl+S    保存<br>Ctrl+PgUp    切换到上一个标签页<br>Ctrl+PgDown    切换到下一个标签页<br>DEL    删除选中部分<br>Alt+Shift+L    改变语言<br>Alt+L    关闭标签页<br>Alt+F4    退出</p>]]></content>
      
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql单词测试</title>
      <link href="/2021/06/13/Mysql%E5%8D%95%E8%AF%8D%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/06/13/Mysql%E5%8D%95%E8%AF%8D%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>MySQL单词：</p><ol><li><p>net start mysql; // 启动服务</p></li><li><p>net stop mysql; // 关闭服务</p></li><li><p>MySQL -u root -p //登录方式一</p></li><li><p>MySQL -u root -p 密码 //登录方式二</p></li><li><p>CREATE database 库名; //创建库</p></li><li><p>CREATE table 表名 (字段)；//创建表</p></li><li><p>drop database 库名; //删除库</p></li><li><p>drop table 表名; // 删除表</p></li><li><p>show databases; // 显示所有库</p></li><li><p>ZEROFILL; //以0填充</p></li><li><p>unsigned; // 无符号 </p></li><li><p>EXIT; // 退出</p></li><li><p>constraint //主键</p></li><li><p>foreign</p></li><li><p>references</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> word </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL聚合函数</title>
      <link href="/2021/06/13/MySQL%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0/"/>
      <url>/2021/06/13/MySQL%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL-聚合函数"><a href="#MySQL-聚合函数" class="headerlink" title="MySQL 聚合函数"></a>MySQL 聚合函数</h2><p>[TOC]</p><h3 id="常用聚合函数"><a href="#常用聚合函数" class="headerlink" title="常用聚合函数"></a>常用聚合函数</h3><table><thead><tr><th align="center">函数名</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">AVG()</td><td align="center">返回某字段平均值</td></tr><tr><td align="center">COUNT()</td><td align="center">返回某个字段的行数</td></tr><tr><td align="center">MAX()</td><td align="center">返回某个字段的最大值</td></tr><tr><td align="center">MIN()</td><td align="center">返回某个字段的最小值</td></tr><tr><td align="center">SUM()</td><td align="center">返回某个字段和</td></tr></tbody></table><h3 id="常用字符串函数"><a href="#常用字符串函数" class="headerlink" title="常用字符串函数"></a>常用字符串函数</h3><table><thead><tr><th align="center">函数名</th><th>作用</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">CONCAT（str1,str2,…,strn）</td><td>连接字符串 str1、str2….、strn为一个完整的字符串</td><td align="center">SELECT CONCAT(‘My’,’S’,’QL’)；返回:MySQL</td></tr><tr><td align="center">INSERT(str,pos,len,newstr)</td><td>将字符串str 从pos位置开始,len 个字符串的子串替换为字符串 newstr</td><td align="center">SELECT INSERT(‘这是SQL Server数据库 ‘,3,10,’MySQL’);返回：这是MySqL数据库</td></tr><tr><td align="center"></td><td></td><td align="center"></td></tr><tr><td align="center"></td><td></td><td align="center"></td></tr><tr><td align="center"></td><td></td><td align="center"></td></tr></tbody></table><h3 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h3><p>MylSAM、InnoDB、Memory、CSV等9钟</p><p>MyISAM与InnoDB类型主要区别</p><table><thead><tr><th align="center">名称</th><th align="center">InnoDB</th><th align="center">MyISAM</th></tr></thead><tbody><tr><td align="center">事务处理</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">数据行锁定</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">外键约束</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">全文索引</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">表空间大小</td><td align="center">较大，约2倍</td><td align="center">较小</td></tr></tbody></table><p>适用场合</p><p>• <strong>使用**<strong>MyISAM</strong></strong>:**  <strong>不需事务，空间小，以查询访问为主</strong></p><p>• <strong>使用**<strong>InnoDB</strong></strong>:**   <strong>多删除、更新操作，安全性高，事务处理及并发控制</strong></p><p>查看默认存储引擎</p><pre><code class="mysql">show variables like &#39;storage_engine%&#39;;</code></pre><p>改存储引擎</p><pre><code class="mysql">default-storage-engine=INNODB /*MyISAM*/</code></pre><p>指定表存储引擎</p><pre><code class="mysql">create 表名(字段)ENGINE=MyISAM;create 表名(字段)ENGINE=INNODB;</code></pre><p>帮助文档</p><pre><code class="mysql">Help 类型;Help Data types;Help contents;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java测试1-8章</title>
      <link href="/2021/06/13/Java%E6%B5%8B%E8%AF%951-8%E7%AB%A0/"/>
      <url>/2021/06/13/Java%E6%B5%8B%E8%AF%951-8%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="Java1-8章"><a href="#Java1-8章" class="headerlink" title="Java1-8章"></a>Java1-8章</h2><p>[TOC]</p><h4 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h4><pre><code class="java">第一章例子gou类://姓名    private String name;        //颜色    private String yanse;        //年龄    private int nianling;    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public String getYanse() {        return yanse;    }    public void setYanse(String yanse) {        this.yanse = yanse;    }    public int getNianling() {        return nianling;    }    public void setNianling(int nianling) {        this.nianling = nianling;    }        //无参构造方法    public gou(){        //this() 可以调用带参的构造方法        System.out.println(&quot;无参的构造方法&quot;);        //this() 会报错    }        //有参构造方法    public gou(String name,String Col,int age){        this.name=name;        this.nianling=age;        this.yanse=Col;        yan();    }        //static静态修饰符    //    1. 静态方法只能访问静态变量    //    2. 需要通过类名调用    //    3. 所有对象共享静态变量    //     4. 非静态可以访问静态的也可以访问非静态的    //    5. 静态不能定义在方法类    public static（静态） String dianming;        //打印方法    public void yan(){        System.out.println(&quot;我叫&quot;+name+&quot;今年&quot;+nianling+&quot;岁颜色是&quot;+yanse+&quot;居住在&quot;+dianming);    }        //静态代码块    //    1. 静态代码块比无参构造方法优先    //    2. 静态代码块只能执行一次    static {        System.out.println(&quot;静态代码块&quot;);    }    //常量    //        1. 当被final修饰符改了必须要给他进行初始化，哪怕是个null也要赋值    public final String name1=null;    public final String name2=&quot;藏獒&quot;;shuru类：public void shuru(){        Scanner input=new Scanner(System.in);        System.out.print(&quot;请输入名字:&quot;);        String mingzi=input.nextLine();        System.out.print(&quot;请输入颜色:&quot;);        String yanse=input.nextLine();        System.out.print(&quot;请输入年龄:&quot;);        int nianling=input.nextInt();        gou gou=new gou();        gou.setName(mingzi);        gou.setNianling(nianling);        gou.setYanse(yanse);        gou.yan();    }mian方法（演示）：public static void main(String[] args) {        // TODO Auto-generated method stub        //无参构造方法        gou.dianming=&quot;河南郑州工人路&quot;;        gou gou=new gou();                //自加        gou.setName(&quot;黄鹏涛&quot;);        gou.setNianling(80);        gou.setYanse(&quot;黄色&quot;);        gou.yan();                //输入        tst ts=new tst();        ts.shuru();                //有参构造方法        gou gou2=new gou(&quot;黄鹏涛&quot;,&quot;黄毛&quot;,28);        //调用常量        //不能再赋值        //gou.name1=&quot;abc&quot;;    会报错    }</code></pre><h4 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h4><pre><code class="java">1. 继承需要用到：extends关键字    父类名2. super();关键字可以调用父类不带参数的构造方法3. super(可以放参数);可以调用父类参数个数的构造方法4. 父类没有无参构造方法的时候，子类创建无参构造方法会报错，就得利用super(可以放参数)这个关键字5. 子类如果没有定义构造方法时，必须保证父类有一个无参构造方法6. 父类使用访问修饰符protected关键字：只能子类可以调用7. 何时使用继承：子类是父类的情况下，子类就是父类，代码的重用(有相同的属性)8. @Override关键字 重写，如果有一个英文错误就会报错。如果没有错误，可以不写9. 构造方法不能被重写10. 方法重写的规则：    1). 方法名与类名一样    2). 列表不相同    3). 在一个类中    4). 与返回值无关11. 用abstract抽象类：    1). 不能new出来    2). 抽象方法是不能有方法体的    3). 类中有抽象方法必定是抽象类12. final:    1). 修改类不能继承    2). 修改方法不能重写方法</code></pre><h4 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h4><pre><code class="Java">1. 多态是什么？    1). 继承的存在    2). 必须又重写    3). 父类引用变量指向子类对象2. 类名 变量名=new 类名()    //打印出类的地址   System.out.printin(变量名)   System.out.printin(变量名.ToString())   可以给ToString重写在打印可以打印出值3. == 比较内存地址     equals()比较内容4. 一个对象去调用equals()方法，如果这个类没有重写父类objact身上的equals()方法，那么比较的内容仍然是内存地址，本质用==时一样的5. 一个对象去调用equals()方法，如果这个类重写父类objact身上的equals()方法，那么比较的结果就是根据调用子类equals()方法返回结果</code></pre><h4 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h4><pre><code class="java"></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令</title>
      <link href="/2021/06/13/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/06/13/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>git 窗口命令</p><pre><code class="mysql">Create New Repository /*创建一个新的仓库*/Clone Existing Repository /*克隆一个存在仓库*/Open Existing Repository /*打开一个存在的仓库*/</code></pre><pre><code class="MySQL">/*命令*/ls /*当前目录*/git --version /*版本*/git init /*创建一个本地仓库*/</code></pre><p>GitHub操作</p><pre><code class="mysql">/*GitHub操作*/git init /*初始化一个本地仓库*/git add README.md /*向本地仓库添加一个文件*/git commit -m &quot;first commit&quot; /*提交*/git remote add origin https://github.com/canerya/repo1.git /*本地仓库 与 远程仓库建立连接*/git push -u origin master /*把本地仓库的内容 推送到远程仓库*/ssh-keygen -t rsa</code></pre><pre><code class="mysql">/*通讯协议*/HTTPS   需要用户名 密码SSH    /*安全外壳协议*/  需要秘钥 </code></pre><pre><code class="mysql">/*克隆*/https://github.com/graykode/nlp-tutorialgithub.com.cnpmjs.orggit clone 协议git pull [master] /*拉取 [分支]*/git fetch [master] /*从远程仓库合并代码到自己的本地仓库*/git merge [master] /*从自己的本地仓库合并代码到自己的工作区*/git pull = git fetch + git merge</code></pre><p>码云操作</p><pre><code class="mysql">/*生成SSH 公钥*/ssh-keygen -t rsa -C &quot;2960634562@qq.com&quot;/*测试连接 测试本机是否获取信任*/ssh -T git@gitee.com</code></pre><p><img src="C:\Users\Administrator\Desktop\Blog\canerBlog_github\canerne.github.io\source_posts\image-20200822222615348.png" alt="image-20200822222615348"></p><p><img src="C:\Users\Administrator\Desktop\Blog\canerBlog_github\canerne.github.io\source_posts\image-20200822230911234.png" alt="image-20200822230911234"><img src="C:\Users\Administrator\Desktop\Blog\canerBlog_github\canerne.github.io\source_posts\image-20200822232640525.png" alt="image-20200822232640525"></p>]]></content>
      
      
      <categories>
          
          <category> Git指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome 开发</title>
      <link href="/2021/06/13/chrome%20%E5%BC%80%E5%8F%91/"/>
      <url>/2021/06/13/chrome%20%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<pre><code>json/**    manifest.json*/// 必须的字段3个&quot;manifest_version&quot;  // manifest文件版本号。Chrome18开始必须为2&quot;name&quot; // 扩展名称&quot;version&quot;  // 版本。由1到4个整数构成。多个整数间用&quot;.&quot;隔开// 建议提供的字段3个&quot;description&quot;  // 描述。132个字符以内&quot;icons&quot;: {       &quot;16&quot;: &quot;image/icon-16.png&quot;,       &quot;48&quot;: &quot;image/icon-48.png&quot;,       &quot;128&quot;: &quot;image/icon-128.png&quot;    }, //扩展图标。推荐大小16，48，128&quot;default_locale&quot;: &quot;en&quot;, // 国际化// 以下字段多选一，或者都不提供 &quot;browser_action&quot;: {       &quot;default_icon&quot;: &quot;image/icon-128.png&quot;,        &quot;default_title&quot;: &quot;My Test&quot;,       &quot;default_popup&quot;: &quot;html/browser.html&quot;    }, //地址栏右侧图标管理。含图标及弹出页面的设置等&quot;page_action&quot;: {        &quot;default_icon&quot;: &quot;image/icon-48.png&quot;,        &quot;default_title&quot;: &quot;My Test&quot;,        &quot;default_popup&quot;: &quot;html/page.html&quot;    }, //地址栏最后附加图标。含图标及行为等 &quot;theme&quot;: {}, // 主题，用于更改整个浏览器的外观&quot;app&quot;: {}, // 指定扩展需要跳转到的URL// 根据需要提供 &quot;background&quot;: {       &quot;scripts&quot;: [           &quot;lib/jquery-3.3.1.min.js&quot;,           &quot;js/background.js&quot;       ] ,      &quot;page&quot;:&quot;html/background.html&quot;    }, // 指定扩展进程的background运行环境&quot;chrome_url_overrides&quot;: {       &quot;pageToOverride&quot;: &quot;html/overrides.html&quot;    }, //替换页面。详见注释1&quot;content_scripts&quot;: [{      &quot;matches&quot;: [&quot;https://www.baidu.com/*&quot;],      &quot;css&quot;: [&quot;css/mystyles.css&quot;],      &quot;js&quot;: [&quot;lib/jquery-3.3.1.min.js&quot;, &quot;js/content.js&quot;]    }], // 指定在web页面运行的脚本。详见注释2   &quot;content_security_policy&quot;: &quot;&quot;,  // 安全策略    &quot;file_browser_handlers&quot;: [],       &quot;homepage_url&quot;: &quot;http://xxx&quot;, // 扩展的官方主页    &quot;incognito&quot;: &quot;spanning&quot;, // 或&quot;split&quot;。详见注释3    &quot;intents&quot;: {}, // 用户操作意图描述    &quot;key&quot;: &quot;&quot;, // 扩展唯一标识。不需要人为指定    &quot;minimum_chrome_version&quot;: &quot;1.0&quot;, // 扩展所需chrome的最小版本    &quot;nacl_modules&quot;: [],  // 消息与本地处理模块映射    &quot;offline_enabled&quot;: true, // 是否允许脱机运行    &quot;omnibox&quot;: {       &quot;keyword&quot;: &quot;myKey&quot;    }, //ominbox即地址栏。用于响应地址栏的输入事件 &quot;options_page&quot;: &quot;aFile.html&quot;, // 选项页。用于在扩展管理页面跳转到选项设置 &quot;permissions&quot;: [       &quot;https://www.baidu.com/*&quot;,       &quot;background&quot;,       &quot;tabs&quot;    ], //权限。详见注释4&quot;plugins&quot;: [{       &quot;path&quot;: &quot;extension_plugin.dll&quot;,       &quot;public&quot;: true    }], // 扩展。可调用第三方扩展    &quot;update_url&quot;: &quot;http://path/to/updateInfo.xml&quot;,   // 自动升级&quot;web_accessible_resources&quot;: [] // 指定资源路径，为String数组</code></pre><h2 id="在Chrome开发测试"><a href="#在Chrome开发测试" class="headerlink" title="在Chrome开发测试"></a>在Chrome开发测试</h2>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Typora -Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora-vue-theme主题介绍</title>
      <link href="/2021/06/13/%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%952/"/>
      <url>/2021/06/13/%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%952/</url>
      
        <content type="html"><![CDATA[<h1 id="这是文章测试"><a href="#这是文章测试" class="headerlink" title="这是文章测试"></a>这是文章测试</h1>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章测试</title>
      <link href="/2021/06/13/%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/06/13/%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<!-- --- title: typora-vue-theme主题介绍 date: 2021-06-07 09:25:00 author: canerimg: /source/images/xxx.jpg top: true cover: true coverImg: /images/1.jpg password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 toc: false mathjax: false summary: "这是文章测试的第一篇！"categories: Markdown tags: - Typora - Markdown --- --><h1 id="这是文章测试"><a href="#这是文章测试" class="headerlink" title="这是文章测试"></a>这是文章测试</h1>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Typora -Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
