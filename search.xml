<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>动漫推荐 01</title>
      <link href="/2021/06/13/%E5%8A%A8%E6%BC%AB%E6%8E%A8%E8%8D%90-01/"/>
      <url>/2021/06/13/%E5%8A%A8%E6%BC%AB%E6%8E%A8%E8%8D%90-01/</url>
      
        <content type="html"><![CDATA[<h2 id="后宫番–"><a href="#后宫番–" class="headerlink" title="后宫番–"></a>后宫番–</h2><p>1.我女友与青梅竹马的惨烈修罗场</p><p>2.伪恋</p><p>3.路人女主的养成方法</p><p>4.笨女孩</p><p>5.我的脑内选项正在全力妨碍学园恋爱喜剧</p><p>6.如果她的旗帜被折断了</p><p>7。埃罗芒阿老师</p><p>8.漫画家与助手</p><p>9.最弱无败神装机龙</p><p>10.无限斯塔拉托斯</p><p>11.喜欢本大爷的竟然就你一个</p><p>12.我们无法一起学习</p><p>13.落地骑士英雄谭</p><p>14.笨蛋，测验，召唤兽</p><p>15.对魔导学园35试验小队</p><p>16.精灵使的剑舞</p><p>17.百炼霸王与圣约女武神</p><p>18.幽奈小姐</p><p>19.异界少女召唤术</p><p>20.新妹魔王的契约者</p><p>关于我转生成为史莱姆这档事<br>刀剑神域<br>overload<br>因为太怕痛就全点防御力了<br>盾之勇者成名录<br>这个勇者明明超强缺过分慎重<br>游戏人生<br>贤者之孙<br>我不是说了能力要平均值吗<br>异世界食堂<br>骑士&amp;魔法<br>异界少女召唤术<br>天使的心跳<br>问题儿童都来自异世界<br>灰与幻想的格林姆迦尔<br>零之使魔<br>记录的地平线<br>为美好的世界献上祝福<br>谭雅战记<br>平行世界物语幻象战士<br>犬夜叉<br>爆肝工程师的异世界狂想曲<br>带着智能手机闯荡异世界<br>爱看书的下克上（慢热型的养老番）<br>命运冠位指定（这算穿越，，吗。。）<br>C 金钱掌控<br>来自多彩世界的明天<br>传颂之物<br>末日时在做什么？有没有空？可以来拯救吗？<br>dog days</p>]]></content>
      
      
      
        <tags>
            
            <tag> 动漫 番剧 动漫推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL练习题</title>
      <link href="/2021/06/13/SQL%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
      <url>/2021/06/13/SQL%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="SQL语句练习题"><a href="#SQL语句练习题" class="headerlink" title="SQL语句练习题"></a>SQL语句练习题</h3><pre><code>第一步:创建数据库company    create databases company;第二步:创建表               &lt;1&gt; 创建部门表        create table dept(        deptno INT PRIMARY KEY,    #部门编号,主键        dname VARCHAR(20),    #部门名称        loc VARCHAR(20)        #部门所在地区        )    &lt;2&gt; 创建员工表        create table emp(        empno INT PRIMARY KEY,    #员工编号,主键        ename VARCHAR(20) NOT NULL, #员工名称        job VARCHAR(20),        #员工的工作        mgp INT ,           #上级编号        hiredate DATETIME ,       #员工入职日期        sal DECIMAL(10,2),       #员工的工资        comm DECIMAL(10,2),       # 员工奖金        parent_deptno INT, #员工所属的部门,相当于一个外键        foreign key (parent_deptno) references dept(deptno)        )第三步: 插入数据        部门表内插入数据    INSERT INTO dept VALUES (10,'会计部','纽约');    INSERT INTO dept VALUES (20,'调查部','北京');    INSERT INTO dept VALUES (30,'销售部','墨西哥');    INSERT INTO dept VALUES (40,'运营部','杭州');    员工表内插入数据    insert into emp values(7369,'张三','CLERK',7902,'1980-12-17',1640,NULL,20);    insert into emp values(7499,'李四','SALESMAN',7698,'1981-2-20',11400,300,30);    insert into emp values(7521,'王五','SALESMAN',7698,'1981-2-22',5200,500,30);    insert into emp values(7566,'赵六','MANAGER',7839,'1981-4-2',7015,NULL,20);    insert into emp values(7654,'郭三','SALESMAN',7698,'1981-9-28',5200,1400,30);    insert into emp values(7698,'郭四','MANAGER',7839,'1981-5-1',5900,NULL,30);    insert into emp values(7782,'郭五','MANAGER',7839,'1981-6-9',2470,NULL,10);    insert into emp values(7788,'郭六','ANALYST',7566,'1987-4-19',3040,NULL,20);    insert into emp values(7844,'麻三','SALESMAN',7698,'1980-12-17',6200,0,30);    insert into emp values(7876,'麻四','CLERK',7788,'1981-9-8',2240,NULL,20);    insert into emp values(7900,'麻五','CLERK',7698,'1987-5-23',4000,NULL,30);    insert into emp values(7902,'麻六','ANALYST',7566,'1981-12-3',3040,NULL,20);    insert into emp values(7934,'麻七','CLERK',7782,'1982-12-3',2620,NULL,10);</code></pre><p>问题：<br>    &lt;1&gt; 查询所有的部门信息。</p><pre><code>&lt;2&gt; 查询所有的员工信息    &lt;3&gt; 查询部门编号为20的所有员工信息。&lt;4&gt; 查询部门编号不为20的所有员工信息。&lt;5&gt; 查询部门编号为20和部门编号为10的所有的员工信息。&lt;6&gt; 查询所有工种为CLERK的员工的员工号、员工名和部门号。&lt;7&gt; 查询工资在5000到7000的所有的员工的信息&lt;8&gt; 查询工资在1000到3000,或者5000到7000的所有的员工的信息&lt;9&gt; 查询不属于部门编号为10和20的所有的员工信息&lt;10&gt; 查询奖金高于工资的20%的员工信息。&lt;11&gt; 查询10号部门中工种为MANAGER和20号部门中工种为CLERK的员工的信息。    &lt;12&gt; 查询所有工种不是MANAGER和CLERK,且工资大于或等于2000的员工的详细信息。&lt;13&gt; 查询有奖金的员工的不同工种。&lt;14&gt; 查询没有奖金或奖金低于100的员工信息。&lt;15&gt; 查询所有的以1981年开头的所有的员工信息。&lt;16&gt; 查询所有姓李的员工姓名&lt;17&gt; 查询员工姓名的第二个字为"家"的员工信息&lt;18&gt; 查询没有奖金的员工信息&lt;19&gt; 查询员工工资最高的员工信息。&lt;20&gt; 查询每个部门中工资最高的员工信息,包括员工编号,员工姓名,员工工资    &lt;21&gt; 查询员工中工资最低的工资是多少    &lt;22&gt; 查询部门编号为10的所有员工的工资总和    &lt;23&gt; 查询本公司的平均工资&lt;24&gt; 查询本公司的员工个数    &lt;25&gt; 查询每个部门的平均工资&lt;26&gt; 查询每个部门的员工个数&lt;27&gt; 查询每个员工的工资少于500块钱后的结果&lt;28&gt; 查询出每个部门的平均工资大有5000元的部门&lt;29&gt; 查询出每个部门的员工个数大于2个人的&lt;30&gt; 查询部门编号是10的所有员工信息并且将工资降序排序    &lt;31&gt; 查询部门编号是30的所有员工信息并且将工资升序排序&lt;32&gt; 查询所有员工信息并按照入职降序排序    &lt;33&gt; 查询员工的姓名和入职日期，并按入职日期从先到后进行排序&lt;34&gt; 显示所有员工的姓名、工种、工资和奖金，按工种降序排序，若工种相同则按工资升序排序，     如果工资还相同,那么按照奖金降序排序。&lt;35&gt; 查询工资最高的前3个员工&lt;36&gt; 查询员工表中第3条记录到第7记录&lt;37&gt; 查询员工表中的部门编号&lt;38&gt; 查询员工表中的部门编号和员工名称&lt;39&gt; 查询雇员表中工资最高的雇员的员工号、员工姓名、工资和部门号。&lt;40&gt; 查询每个部门下工资最高的员工姓名、薪水、部门编号&lt;41&gt; 查询工资比郭三员工工资高的所有员工信息。&lt;42&gt; 查询部门编号为30的员工的最高工资和部门编号为10的员工的最低工资&lt;43&gt; 查询部门编号为30的并且按照工资降序排序的员工和部门编号为10的并且工资升序的员工</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20个最常用的正则表达式</title>
      <link href="/2021/06/13/20%E4%B8%AA%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2021/06/13/20%E4%B8%AA%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="一、20个最常用的正则表达式"><a href="#一、20个最常用的正则表达式" class="headerlink" title="一、20个最常用的正则表达式"></a>一、20个最常用的正则表达式</h2><pre class=" language-JavaScript"><code class="language-JavaScript">#1 . 校验密码强度：密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$#2. 校验中文：字符串仅能是中文^[\\u4e00-\\u9fa5]{0,}$# 3. 由数字、26个英文字母或下划线组成的字符串：^\\w+$#4. 校验E-Mail 地址：同密码一样，下面是E-mail地址合规性的正则检查语句。[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w#5. 校验身份证号码：下面是身份证号码的正则校验。15 或 18位。#15位^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$#18位^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$#6. 校验日期：“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年。^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$#7. 校验金额：金额校验，精确到2位小数。^[0-9]+(.[0-9]{2})?$#8. 校验手机号：下面是国内 13、15、18开头的手机号正则表达式。^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$#9. 判断IE的版本：IE目前还没被完全取代，很多页面还是需要做版本兼容，下面是IE版本检查的表达式。^.*MSIE [5-8](?:\\.[0-9]+)?(?!.*Trident\\/[5-9]\\.0).*$#10. 校验IP-v4地址：IP4 正则语句\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b#11. 校验IP-v6地址：IP6 正则语句。(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))#12. 检查URL的前缀：应用开发中很多时候需要区分请求是HTTPS还是HTTP，通过下面的表达式可以取出一个url的前缀然后再逻辑判断。if (!s.match(/^[a-zA-Z]+:\\/\\//)){ s = 'http://' + s;}#13. 提取URL链接：下面的这个表达式可以筛选出一段文本中的URL。^(f|ht){1}(tp|tps):\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?#14. 文件路径及扩展名校验：下面的这个表达式可以筛选出一段文本中的URL。^(f|ht){1}(tp|tps):\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?#14. 文件路径及扩展名校验：验证文件路径和扩展名^([a-zA-Z]\\:|\\\\)\\\\([^\\\\]+\\\\)*[^\\/:*?"<>|]+\\.txt(l)?$#15. 提取Color Hex  Codes：有时需要抽取网页中的颜色代码，可以使用下面的表达式。\\#([a-fA-F]|[0-9]){3,6}#16. 提取网页图片：假若你想提取网页中所有图片信息，可以利用下面的表达式。\\< *[img][^\\>]*[src] *= *[\\"\\']{0,1}([^\\"\\'\\ >]*)#17. 提取页面超链接：提取html中的超链接。(<;a\\s*(?!.*\\brel=)[^>;]*)(href="https?://)((?!(?:(?:www\\.)?'.implode('|(?:www\\.)?', $follow_list)#18. 精炼CSS：通过下面的表达式，可以搜索相同属性值的CSS，从而达到精炼代码的目的。^\\s*[a-zA-Z\\-]+\\s*[:]{1}\\s[a-zA-Z0-9\\s.#]+[;]{1}#19. 抽取注释：如果你需要移除HMTL中的注释，可以使用如下的表达式。<!--(.*?)--> #20. 匹配HTML标签：通过下面的表达式可以匹配出HTML中的标签。</?\\w+((\\s+\\w+(\\s*=\\s*(?:".*?"|'.*?'|[\\^'">\\s]+))?)+\\s*|\\s*)/?></code></pre><h2 id="二、校验数字表达式"><a href="#二、校验数字表达式" class="headerlink" title="二、校验数字表达式"></a>二、校验数字表达式</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token number">1</span> 数字：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>$ <span class="token number">2</span> n位的数字：<span class="token operator">^</span>\d<span class="token punctuation">{</span>n<span class="token punctuation">}</span>$<span class="token number">3</span> 至少n位的数字：<span class="token operator">^</span>\d<span class="token punctuation">{</span>n<span class="token punctuation">,</span><span class="token punctuation">}</span>$ <span class="token number">4</span> m<span class="token operator">-</span>n位的数字：<span class="token operator">^</span>\d<span class="token punctuation">{</span>m<span class="token punctuation">,</span>n<span class="token punctuation">}</span>$ <span class="token number">5</span> 零和非零开头的数字：<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span>$ <span class="token number">6</span> 非零开头的最多带两位小数的数字：<span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span>$ <span class="token number">7</span> 带<span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span>位小数的正数或负数：<span class="token operator">^</span><span class="token punctuation">(</span>\<span class="token operator">-</span><span class="token punctuation">)</span><span class="token operator">?</span>\d<span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span>$ <span class="token number">8</span> 正数、负数、和小数：<span class="token operator">^</span><span class="token punctuation">(</span>\<span class="token operator">-</span><span class="token operator">|</span>\<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">?</span>\d<span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">?</span>$ <span class="token number">9</span> 有两位小数的正实数：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span>$<span class="token number">10</span> 有<span class="token number">1</span><span class="token operator">~</span><span class="token number">3</span>位小数的正实数：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span>$<span class="token number">11</span> 非零的正整数：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span>$ 或 <span class="token operator">^</span>\<span class="token operator">+</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>$<span class="token number">12</span> 非零的负整数：<span class="token operator">^</span>\<span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span>"<span class="token operator">*</span>$ 或 <span class="token operator">^</span><span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span>$<span class="token number">13</span> 非负整数：<span class="token operator">^</span>\d<span class="token operator">+</span>$ 或 <span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>$<span class="token number">14</span> 非正整数：<span class="token operator">^</span><span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span>\d<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token number">15</span> 非负浮点数：<span class="token operator">^</span>\d<span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">?</span>$ 或 <span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span><span class="token operator">?</span>\<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">+</span><span class="token operator">|</span><span class="token number">0</span>$<span class="token number">16</span> 非正浮点数：<span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span>\d<span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">0</span><span class="token operator">?</span>\<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">+</span><span class="token operator">|</span><span class="token number">0</span>$<span class="token number">17</span> 正浮点数：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token number">18</span> 负浮点数：<span class="token operator">^</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span><span class="token punctuation">)</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token number">19</span> 浮点数：<span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token operator">?</span>\d<span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">?</span>$ 或 <span class="token operator">^</span><span class="token operator">-</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span><span class="token operator">?</span>\<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">+</span><span class="token operator">|</span><span class="token number">0</span><span class="token punctuation">)</span>$</code></pre><h2 id="三、校验字符的表达式"><a href="#三、校验字符的表达式" class="headerlink" title="三、校验字符的表达式"></a>三、校验字符的表达式</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token number">1</span> 汉字：<span class="token operator">^</span><span class="token punctuation">[</span>\u4e00<span class="token operator">-</span>\u9fa5<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">}</span>$ <span class="token number">2</span> 英文和数字：<span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token number">-9</span><span class="token punctuation">]</span><span class="token operator">+</span>$ 或 <span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token number">-9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">}</span>$ <span class="token number">3</span> 长度为<span class="token number">3</span><span class="token operator">-</span><span class="token number">20</span>的所有字符：<span class="token operator">^</span><span class="token punctuation">.</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">}</span>$ <span class="token number">4</span> 由<span class="token number">26</span>个英文字母组成的字符串：<span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Za<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span>$ <span class="token number">5</span> 由<span class="token number">26</span>个大写英文字母组成的字符串：<span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Z<span class="token punctuation">]</span><span class="token operator">+</span>$ <span class="token number">6</span> 由<span class="token number">26</span>个小写英文字母组成的字符串：<span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span>$ <span class="token number">7</span> 由数字和<span class="token number">26</span>个英文字母组成的字符串：<span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token number">-9</span><span class="token punctuation">]</span><span class="token operator">+</span>$ <span class="token number">8</span> 由数字、<span class="token number">26</span>个英文字母或者下划线组成的字符串：<span class="token operator">^</span>\w<span class="token operator">+</span>$ 或 <span class="token operator">^</span>\w<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">}</span>$ <span class="token number">9</span> 中文、英文、数字包括下划线：<span class="token operator">^</span><span class="token punctuation">[</span>\u4E00<span class="token operator">-</span>\u9FA5A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span>9_<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token number">10</span> 中文、英文、数字但不包括下划线等符号：<span class="token operator">^</span><span class="token punctuation">[</span>\u4E00<span class="token operator">-</span>\u9FA5A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token number">-9</span><span class="token punctuation">]</span><span class="token operator">+</span>$ 或 <span class="token operator">^</span><span class="token punctuation">[</span>\u4E00<span class="token operator">-</span>\u9FA5A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token number">-9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">}</span>$<span class="token number">11</span> 可以输入含有<span class="token operator">^</span><span class="token operator">%</span><span class="token operator">&amp;</span><span class="token string">',;=?$\"等字符：[^%&amp;'</span><span class="token punctuation">,</span><span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">?</span>$\x22<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">12</span> 禁止输入含有<span class="token operator">~</span>的字符：<span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">~</span>\x22<span class="token punctuation">]</span><span class="token operator">+</span></code></pre><h2 id="四、特殊需求表达式"><a href="#四、特殊需求表达式" class="headerlink" title="四、特殊需求表达式"></a>四、特殊需求表达式</h2><pre class=" language-Javascript"><code class="language-Javascript">1 Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$ 2 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.? 3 InternetURL：[a-zA-z]+://[^\s]* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$ 4 手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$ 5 电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$  6 国内电话号码(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7} 7 身份证号(15位、18位数字)：^\d{15}|\d{18}$ 8 短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$ 9 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$10 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w{5,17}$11 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$12 日期格式：^\d{4}-\d{1,2}-\d{1,2}13 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$14 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$15 钱的输入格式：16 1.有四种钱的表示形式我们可以接受:"10000.00" 和 "10,000.00", 和没有 "分" 的 "10000" 和 "10,000"：^[1-9][0-9]*$17 2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符"0"不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$18 3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$19 4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$20 5.必须说明的是,小数点后面至少应该有1位数,所以"10."是不通过的,但是 "10" 和 "10.2" 是通过的：^[0-9]+(.[0-9]{2})?$21 6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$22 7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$23 8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$24 备注：这就是最终结果了,别忘了"+"可以用"*"替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里25 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$26 中文字符的正则表达式：[\u4e00-\u9fa5]27 双字节字符：[^\x00-\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))28 空白行的正则表达式：\n\s*\r (可以用来删除空白行)29 HTML标记的正则表达式：<(\S*?)[^>]*>.*?</\1>|<.*? /> (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)30 首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)31 腾讯QQ号：[1-9][0-9]{4,} (腾讯QQ号从10000开始)32 中国邮政编码：[1-9]\d{5}(?!\d) (中国邮政编码为6位数字) 33 IP地址：\d+\.\d+\.\d+\.\d+ (提取IP地址时有用) 34 IP地址：((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础</title>
      <link href="/2021/06/13/Python%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/06/13/Python%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>python </p><p>#写入文件</p><pre><code>data = '我是一个靓仔'with open('我是一个文件.txt','w') as f:#这个f的意思就是起了个名字      f.write(data)#逐行写入      '为什么推荐用with写法？''因为with 可以自动关闭文件''防止手残,属于python的语法糖'</code></pre><p>#函数的传递 与调用</p><pre><code>def liangzai(data):    print(data)#输出dataif __name__ == "__main__":#程序的入口 也就是主函数    data = '靓仔'    liangzai(data)#传入data</code></pre><p> #字典</p><pre><code>data = {'一个':'靓仔','编程':'程序员'}print(data['一个'])print(data['编程'])</code></pre><p>#字符串替换</p><pre><code>data = '一个靓仔'new_data = '我是{}'.format(data)#注意 format只和{}替换print(new_data)'强烈推荐用.format写法''特殊要求才用原始写法 % 'data = '一个靓仔'new_data = '我是%s'%dataprint(new_data)</code></pre><p>#新建文件夹</p><pre><code>import osdata = '我是一个靓仔'if not os.path.exists(data):#如果没有这个文件夹      os.makedirs(data)#就创建</code></pre><p>#迭代</p><pre><code>for i in range(0,10,2):   print(i)#0，2，4，6，8</code></pre><p>#文字加密</p><pre><code>from uuid import uuid4print(uuid4())</code></pre><p>#文字解析</p><pre><code>from urllib import parse#解析data = '我是一个靓仔'new_data = parse.quote(data)print(new_data)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql语法</title>
      <link href="/2021/06/13/Mysql%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/06/13/Mysql%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>MySQL：</p><p>[^小伟丫]: </p><pre class=" language-mysql"><code class="language-mysql">\c #放弃 当前执行代码</code></pre><p>建数据库（指定字符集）</p><pre class=" language-mysql"><code class="language-mysql">create database shop(数据库名) charset utf8;</code></pre><p>进入数据库</p><pre class=" language-mysql"><code class="language-mysql">show database; # 显示所有数据库drop database shop; #删除指定数据库//增加条件删除(减少报错)drop database if exists shop; # 如果存在就删除</code></pre><p>查看数据库结构</p><pre class=" language-mysql"><code class="language-mysql">show create database shop; # 查看数据库结构desc 表名;# 查看表结构</code></pre><p>建表</p><pre class=" language-mysql"><code class="language-mysql">create table 表名(id int PRIMARY KEY AUTO_INCREMNT,cname varchar(30),description varchar(100)) charset utf8; #指定表编码（如果不指定默认继承数据库编码）desc 表名;# 查看结构 （SQLyog）drop table if EXISTS 表名;</code></pre><p>建表尝试</p><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE 'tb_student'('sid' INT(4) ZEROFILL);CREATE TABLE 'tb_student'('sid' INT(4) ZEROFILL);</code></pre><p>插入数据</p><pre class=" language-mysql"><code class="language-mysql">insert into 表名 value(数据1),(数据2);# 仅限于单列 时可添加多条数据;insert into 表名(字段名列表) values(值列表1),(值列表2);#添加多条;/*以上句式在MySQL中不支持*/create table 新表(select 字段1,字段2,...from 原表);</code></pre><p>查看表</p><pre class=" language-mysql"><code class="language-mysql">select * from 表名;# 查看某个表数据show create table 表名; #查看表注释</code></pre><p>出现乱码情况</p><pre class=" language-mysql"><code class="language-mysql">set character_set_client=gbk; #设置编码set character_set_results=gbk; #设置乱码set names gbk; </code></pre><p>修改表</p><pre class=" language-mysql"><code class="language-mysql">alter table `旧表` rename `新表`; # 修改表名</code></pre><p>添加字段</p><pre class=" language-mysql"><code class="language-mysql">alter table 表名 add 字段名 类型; # 添加字段</code></pre><p>修改字段</p><pre class=" language-mysql"><code class="language-mysql">/*修改字段名*/alter table 表名 change 修改字段 修改后字段 char(10) 属性; # 修改字段</code></pre><p>删除字段</p><pre class=" language-mysql"><code class="language-mysql">/*删除字段*/alter table 表名 drop 字段名; # 删除字段</code></pre><p>添加主键约束</p><pre class=" language-mysql"><code class="language-mysql">alter table 表名 add constraint 主键名 primary key 表名(主键字段); </code></pre><p>添加外键约束</p><pre class=" language-mysql"><code class="language-mysql">ALTER TABLE pet外键表 ADD CONSTRAINT fk_typeId外键名 FOREIGN KEY (typeId)外键idREFERENCES pettype主键表(id)主键id</code></pre><p>将查询结果插入到新表</p><pre class=" language-mysql"><code class="language-mysql">insert into 新表(字段1,字段2,....)select 字段1,字段2,....from 原表;</code></pre><p>更新数据记录</p><pre class=" language-mysql"><code class="language-mysql">update 表名 set 字段1=值,字段2=值,...,where 条件;delete from 表名 where 条件(字段=值);</code></pre><p>高级查询</p><pre class=" language-mysql"><code class="language-mysql">select 字段1,字段2,字段3 from 表名where 条件(字段=值)order by 字段(学号);# 升序</code></pre><p>添加外键事例：</p><pre class=" language-mysql"><code class="language-mysql">#pet 主人id 外键ALTER TABLE `pet` ADD CONSTRAINT `fk_owner_id` FOREIGN KEY (`owner_id`) REFERENCES `petwner` (`id`);#pet 商店id 外键ALTER TABLE `pet` ADD CONSTRAINT `fk_store_id` FOREIGN KEY (`store_id`) REFERENCES `petstore`(id);#account 账目表 宠物外键ALTER TABLE `account` ADD CONSTRAINT `fk_pet_id` FOREIGN KEY (`pet_id`) REFERENCES `pet`(id);#account 账目表 买家id 外键ALTER TABLE `account` ADD CONSTRAINT `fk_seller_id` FOREIGN KEY (`seller_id`) REFERENCES `petwner`(id);#account 账目表 卖家id 外键ALTER TABLE `account` ADD CONSTRAINT `fk_buyer_id` FOREIGN KEY (`buyer_id`) REFERENCES `petwner`(id);</code></pre><p>查看表结构：</p><pre class=" language-mysql"><code class="language-mysql">SHOW CREATE TABLE account(表名);</code></pre><p>特殊类型:</p><pre class=" language-mysql"><code class="language-mysql">TIMESTAMP #时间decimal #money</code></pre><p>创建本地用户 指定 库：</p><pre class=" language-mysql"><code class="language-mysql">/*创建本地用户epet,密码0000*/GRANT ALL ON petShop.* TO `epet`@`localhost` IDENTIFIED BY '0000'</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql事务</title>
      <link href="/2021/06/13/Mysql%E4%BA%8B%E5%8A%A1/"/>
      <url>/2021/06/13/Mysql%E4%BA%8B%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="事务："><a href="#事务：" class="headerlink" title="事务："></a>事务：</h3><p>事务必须具备以下四个属性，简称ACID属性</p><p>原子性 (Atomicity)</p><pre class=" language-mysql"><code class="language-mysql">##事务是一个完整的操作，事务的各步操作是不可分的(原子的),要么都执行,要么都不执行</code></pre><p>一致性（Consistency)</p><pre class=" language-mysql"><code class="language-mysql">##当事务完成时，数据必须处于一致状态</code></pre><p>隔离性（Isolation）</p><pre class=" language-mysql"><code class="language-mysql">##并发事务之间隔离,独立，他不应该以任何方式依赖于或影响其他事务</code></pre><p>持久性（Durability）</p><pre class=" language-mysql"><code class="language-mysql">##事务完成后,他对数据库的修改被永远保存</code></pre><p>视图：</p><pre class=" language-mysql"><code class="language-mysql">/*开启事务*/BEGIN;#手动开启事务start transaction/*提交事务，写入硬盘，永久保存*/COMMIT;#手动关闭事务#不设置自动提交  0 关闭   1 开启SET autocommit=0;##创建视图create view 视图名as 查询语句##删除视图drop view 视图名##查看视图select * from 视图名#查看所有视图use 数据库select * from viues;</code></pre><p>索引:</p><pre class=" language-Mysql"><code class="language-Mysql">#使用比较频繁的列  需要 索引#添加索引   普通索引CREATE INDEX index_ename ON emp(ename)    #删除 索引 DROP INDEX index_ename ON emp;#查看索引SHOW INDEX FROM emp;#主键索引 不允许重复 不允许为空#唯一 索引 不允许重复 允许为nullCREATE UNIQUE INDEX index_job ON emp(job)#组合索引  可以重复  允许为空CREATE INDEX index_ename_job ON emp(ename,job)</code></pre><p>备份：</p><pre class=" language-Mysql"><code class="language-Mysql">##备份数据库mysqldump -uroot -proot 数据库名>D:\\要保存的名字.sql##备份表mysqldump -uroot -proot 数据库名 表名>D:\\表名.sql##备份多表mysqldump -uroot -proot 数据库名 表名 表名>D:\\表名.sql##恢复备份mysql -u root -p 数据库名 < 原数据位置.sql##恢复数据use 选择数据库source 备份表名地址.sql</code></pre><p>导出查询数据:</p><pre class=" language-Mysql"><code class="language-Mysql">##导出#查询语句xxxxxx #查询语句into outfile '路径' # D:/表名.txt#导入load data infile "文件路径" into table 表名</code></pre><p>MySQL(PassWord)加密格式:</p><pre class=" language-mysql"><code class="language-mysql">##mysql5加密     例：*23AE809DDACAF96AF0FD78ED04B6A265E05AA257</code></pre><p>设置用户权限:</p><pre class=" language-mysql"><code class="language-mysql">##设置权限GRANT ALL ON *.*TO `小伟`@`localhost`IDENTIFIED  BY '123'##刷新权限FLUSH PRIVILEGES  #改用户密码mysqladmin -u root -p paddword "新密码"#改其他账户密码set password for 用户名 =password("新密码");#设置当前账户的密码set password=password("新密码");</code></pre><p>MySQL:</p><pre class=" language-mysql"><code class="language-mysql"># 同时修改 一 表  同一字段的 多个 数据 分别修改UPDATE dog SET `name` = CASE  idWHEN 1 THEN '大花' WHEN 2 THEN '大旺财' WHEN 3 THEN '大土狗' END WHERE id IN (1,2,3) </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql命令</title>
      <link href="/2021/06/13/Mysql%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/06/13/Mysql%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL命令"><a href="#MySQL命令" class="headerlink" title="MySQL命令"></a>MySQL命令</h2><p>[TOC]</p><p>[^小伟]: </p><h5 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h5><pre><code>net stop mysql //停止服务</code></pre><h5 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h5><pre><code>net start mysql //启动服务</code></pre><h5 id="连接命令"><a href="#连接命令" class="headerlink" title="连接命令"></a>连接命令</h5><pre><code>mysql -h服务器主机地址 -u用户名 -p密码mysql -u root -p rootmysql -u root -pexit 退出</code></pre><h5 id="查询版本"><a href="#查询版本" class="headerlink" title="查询版本"></a>查询版本</h5><pre><code>select version(),user();</code></pre><h5 id="数据库语句"><a href="#数据库语句" class="headerlink" title="数据库语句"></a>数据库语句</h5><pre><code>create database myschool;创建     数据库    名称show databases //显示数据库use myschool;//选择数据库drop database myschool;//删除数据库</code></pre><h5 id="数据库提示语句"><a href="#数据库提示语句" class="headerlink" title="数据库提示语句"></a>数据库提示语句</h5><pre class=" language-mysql"><code class="language-mysql">Qyery OK ：SQL语句执行成功1 row affected ：操作影响的行数0.012sec ：操作执行时间Unknown database 'mybase'：数据库不存在Database changed : 选择数据库成功</code></pre><h5 id="数据库工具"><a href="#数据库工具" class="headerlink" title="数据库工具"></a>数据库工具</h5><pre><code>SQLyog-图形化的MySQL管理工具</code></pre><h5 id="关系图"><a href="#关系图" class="headerlink" title="关系图"></a>关系图</h5><table><thead><tr><th><strong>符号</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20200518113711214.png" alt="image-20200518113711214"></td><td><strong>实体，一般是名词</strong></td></tr><tr><td><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20200518113723540.png" alt="image-20200518113723540"></td><td><strong>属性，一般是名词</strong></td></tr><tr><td><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20200518113737563.png" alt="image-20200518113737563"></td><td><strong>关系，一般是动词</strong></td></tr></tbody></table><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20200518113757897.png" alt="image-20200518113757897"></p><h5 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h5><pre class=" language-mysql"><code class="language-mysql">ZEROFILL # 自补充 限制输入负数 补位 约束 数值只能为正数unsigned # 标识 无符号 不能为负数PRIMARY KEY # 设置 为 主键AUTO_INCREMENT # 自增加一DEFAULT # 默认约束COMMENT # 注释声明EXISTS # 存在constraint # 主键references # 外键</code></pre><h5 id="高级查询"><a href="#高级查询" class="headerlink" title="高级查询"></a>高级查询</h5><pre class=" language-mysql"><code class="language-mysql">#查询#limit 参数1(int) 取前几条SELECT studentName,phone,address FROM studentORDER BY studentNo DESCLIMIT 4#limit 参数1(int),参数2(int) 截取位置(开始位置,结束位置)SELECT gradeId,studentName,phone,address,bornDate,email,pwd,sex FROM studentORDER BY studentNo DESCLIMIT 2,2 #截取到跳过 2个后的2个asc 升序desc 降序/*聚合函数*/# concat 字符串拼接SELECT CONCAT('My','S','QL')# insert 替换字符串(参数1，参数2，参数3,参数4)(原字符串,从第几位开始,替换个数,替换对象(新字符串))SELECT INSERT('这是SqL Server数据库',3,10,'MySql')# 转大写SELECT LOWER('ABC')# 转小写SELECT UPPER('abc')# substring 截取(参数1,参数2,参数3)(原字符串,开始下标,开始下标后的多少位)SELECT SUBSTRING('JavaMySQLOracle',5,5)SELECT SUBSTRING('asdasd',3)# ----时间日期函数-----# curDate 获取当前时间 (年月日)SELECT CURDATE()# CURTIME 获取当前时间 (时分秒)SELECT CURTIME()# now 获取当前时间 年月日 时分秒SELECT NOW()# week(date) date参数是时间格式 获取一年中的第几周SELECT WEEK('2020-1-17')+1# 获取年 月 日 时 分 秒SELECT YEAR(NOW()) # 年SELECT MONTH(NOW()) # 月SELECT DAY(NOW()) # 日SELECT HOUR(NOW()) # 时SELECT MINUTE(NOW()) # 分SELECT SECOND(NOW()) # 秒# DATEDIFF 求天数差 (参数1,参数2)SELECT DATEDIFF(NOW(),'2008-01-1')# ADDDDATE (参数1,参数2) 参数1 基础时间 参数2 添加天数SELECT ADDDATE(NOW(),30)# CEIL 向上取整 (返回大于或者等于自己的整数)SELECT CEIL(8.1)# floor 向下取整 (返回小于或者等于自己的整数)SELECT FLOOR(9.9)# rand 返回 0 - 1之间的随机数SELECT RAND()truncate # 重置自增</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql快捷键</title>
      <link href="/2021/06/13/Mysql%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2021/06/13/Mysql%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL快捷键"><a href="#MySQL快捷键" class="headerlink" title="MySQL快捷键"></a>MySQL快捷键</h2><p>连接<br>Ctrl+M    创建新连接<br>Ctrl+N    以当前连接属性创建新连接<br>Ctrl+F4/Ctrl+W    断开当前连接<br>Ctrl+Tab    切换到下一个连接<br>Ctrl+Shift+Tab    切换到上一个连接<br>Ctrl+1…8    选择连接（1到8）<br>Ctrl+9    选择最后一个连接</p><p>对象浏览器<br>F5    刷新对象浏览器（默认）<br>Ctrl+B    切换焦点至对象浏览器</p><p>SQL窗口<br>Ctrl+T    新查询窗口<br>Ctrl+E    切换焦点至SQL窗口<br>Ctrl+Y    重做<br>Ctrl+Z    撤销<br>Ctrl+X    剪切<br>Ctrl+V    粘贴<br>Ctrl+H    替换<br>Ctrl+G    转到<br>Ctrl+O    打开文件<br>Ctrl+Shift+U    将选中部分变为大写<br>Ctrl+Shift+L     将选中部分变为小写<br>Ctrl+Shift+C     在SQL窗口中对选中部分标注<br>Ctrl+Shift+R     删除选中部分的注释<br>Ctrl+Shift+T     插入模板<br>Ctrl+Space    列出所有标记<br>Ctrl+Enter    列出匹配的标签<br>Ctrl+Shift+Space    列出函数和路由参数</p><p>查询执行<br>F8    执行当前查询并编辑结果<br>F9    执行查询（默认）<br>Ctrl+F9            Execute All Query(s) (Default)</p><p>SQL格式程序<br>F12    格式化当前查询<br>Ctrl+F12    格式化选中的查询<br>Shift+F12    格式化所有查询</p><p>粘贴SQL语句<br>Alt+Shift+I    插入语句<br>Alt+Shift+U    更新语句<br>Alt+Shift+D    删除语句<br>Alt+Shift+S    查询语句</p><p>结果<br>F11    插入更新窗口<br>Ctrl+R    将焦点切换至结果面板中的当前标签页<br>Ctrl+L    切换结果窗口/表数据为数据表格/文字模式<br>Ctrl+Alt+C    导出表数据为CSV，Excel，SQL等…<br>Ctrl+Alt+E    备份数据库为SQL转储<br>Ctrl+Shift+M    从CSV导入数据<br>Ctrl+Shift+E    导出结果集<br>Ctrl+Space    打开外键查找<br>Alt+1…8    选择结果窗口里的标签页（1到8）<br>Alt+9    选择结果窗口里的最后一个标签页</p><p>显示/隐藏<br>Ctrl+Shift+1    显示/隐藏对象浏览器<br>Ctrl+Shift+2    显示/隐藏结果面板<br>Ctrl+Shift+3    显示/隐藏查询窗口</p><p>数据库/表<br>Ctrl+D    创建数据库<br>F6    修改数据库/表结构/索引/视图/存储过程/函数/触发器/事件<br>F2    重命名表/视图/触发器/事件<br>Shift+Del    截断数据库/表<br>F7    管理索引窗口<br>F10    关系/外键<br>Ctrl+Alt+R    重新排序列<br>Ctrl+Alt+T    表诊断<br>Ctrl+Alt+F    输出对话框<br>Ctrl+Shift+Alt+S    以HTML形式创建数据库结构<br>Ctrl+Shift+Q    执行SQL脚本</p><p>工具<br>Ctrl+Alt+W     数据库同步向导<br>Ctrl+Q     架构同步工具<br>Ctrl+Alt+O     导入外部数据向导<br>Ctrl+Alt+N    通知服务向导<br>Ctrl+Alt+S    计划备份向导<br>Ctrl+K    查询创建器<br>Ctrl+Alt+D    架构设计器<br>Ctrl+Shift+D    数据搜索</p><p>用户管理<br>Ctrl+U    打开用户管理器</p><p>书签<br>Ctrl+Shift+F    添加当前SQL至收藏</p><p>其他<br>F1    帮助<br>Ctrl+Shift+H    打开历史记录标签<br>Ctrl+Shift+I    打开信息标签页<br>Ctrl+C    复制<br>Ctrl+A    全选<br>Ctrl+F    查找（SQL窗口/结果窗口和文字模式表数据/Blob查看器）<br>F3    查找下一个（SQL窗口/结果窗口和文字模式表数据/Blob查看器）<br>Ctrl+S    保存<br>Ctrl+PgUp    切换到上一个标签页<br>Ctrl+PgDown    切换到下一个标签页<br>DEL    删除选中部分<br>Alt+Shift+L    改变语言<br>Alt+L    关闭标签页<br>Alt+F4    退出</p>]]></content>
      
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql单词测试</title>
      <link href="/2021/06/13/Mysql%E5%8D%95%E8%AF%8D%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/06/13/Mysql%E5%8D%95%E8%AF%8D%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>MySQL单词：</p><ol><li><p>net start mysql; // 启动服务</p></li><li><p>net stop mysql; // 关闭服务</p></li><li><p>MySQL -u root -p //登录方式一</p></li><li><p>MySQL -u root -p 密码 //登录方式二</p></li><li><p>CREATE database 库名; //创建库</p></li><li><p>CREATE table 表名 (字段)；//创建表</p></li><li><p>drop database 库名; //删除库</p></li><li><p>drop table 表名; // 删除表</p></li><li><p>show databases; // 显示所有库</p></li><li><p>ZEROFILL; //以0填充</p></li><li><p>unsigned; // 无符号 </p></li><li><p>EXIT; // 退出</p></li><li><p>constraint //主键</p></li><li><p>foreign</p></li><li><p>references</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> word </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL聚合函数</title>
      <link href="/2021/06/13/MySQL%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0/"/>
      <url>/2021/06/13/MySQL%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL-聚合函数"><a href="#MySQL-聚合函数" class="headerlink" title="MySQL 聚合函数"></a>MySQL 聚合函数</h2><p>[TOC]</p><h3 id="常用聚合函数"><a href="#常用聚合函数" class="headerlink" title="常用聚合函数"></a>常用聚合函数</h3><table><thead><tr><th align="center">函数名</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">AVG()</td><td align="center">返回某字段平均值</td></tr><tr><td align="center">COUNT()</td><td align="center">返回某个字段的行数</td></tr><tr><td align="center">MAX()</td><td align="center">返回某个字段的最大值</td></tr><tr><td align="center">MIN()</td><td align="center">返回某个字段的最小值</td></tr><tr><td align="center">SUM()</td><td align="center">返回某个字段和</td></tr></tbody></table><h3 id="常用字符串函数"><a href="#常用字符串函数" class="headerlink" title="常用字符串函数"></a>常用字符串函数</h3><table><thead><tr><th align="center">函数名</th><th>作用</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">CONCAT（str1,str2,…,strn）</td><td>连接字符串 str1、str2….、strn为一个完整的字符串</td><td align="center">SELECT CONCAT(‘My’,’S’,’QL’)；返回:MySQL</td></tr><tr><td align="center">INSERT(str,pos,len,newstr)</td><td>将字符串str 从pos位置开始,len 个字符串的子串替换为字符串 newstr</td><td align="center">SELECT INSERT(‘这是SQL Server数据库 ‘,3,10,’MySQL’);返回：这是MySqL数据库</td></tr><tr><td align="center"></td><td></td><td align="center"></td></tr><tr><td align="center"></td><td></td><td align="center"></td></tr><tr><td align="center"></td><td></td><td align="center"></td></tr></tbody></table><h3 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h3><p>MylSAM、InnoDB、Memory、CSV等9钟</p><p>MyISAM与InnoDB类型主要区别</p><table><thead><tr><th align="center">名称</th><th align="center">InnoDB</th><th align="center">MyISAM</th></tr></thead><tbody><tr><td align="center">事务处理</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">数据行锁定</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">外键约束</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">全文索引</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">表空间大小</td><td align="center">较大，约2倍</td><td align="center">较小</td></tr></tbody></table><p>适用场合</p><p>• <strong>使用**<strong>MyISAM</strong></strong>:**  <strong>不需事务，空间小，以查询访问为主</strong></p><p>• <strong>使用**<strong>InnoDB</strong></strong>:**   <strong>多删除、更新操作，安全性高，事务处理及并发控制</strong></p><p>查看默认存储引擎</p><pre class=" language-mysql"><code class="language-mysql">show variables like 'storage_engine%';</code></pre><p>改存储引擎</p><pre class=" language-mysql"><code class="language-mysql">default-storage-engine=INNODB /*MyISAM*/</code></pre><p>指定表存储引擎</p><pre class=" language-mysql"><code class="language-mysql">create 表名(字段)ENGINE=MyISAM;create 表名(字段)ENGINE=INNODB;</code></pre><p>帮助文档</p><pre class=" language-mysql"><code class="language-mysql">Help 类型;Help Data types;Help contents;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java测试1-8章</title>
      <link href="/2021/06/13/Java%E6%B5%8B%E8%AF%951-8%E7%AB%A0/"/>
      <url>/2021/06/13/Java%E6%B5%8B%E8%AF%951-8%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="Java1-8章"><a href="#Java1-8章" class="headerlink" title="Java1-8章"></a>Java1-8章</h2><p>[TOC]</p><h4 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h4><pre class=" language-java"><code class="language-java">第一章例子gou类<span class="token operator">:</span><span class="token comment" spellcheck="true">//姓名</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//颜色</span>    <span class="token keyword">private</span> String yanse<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//年龄</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> nianling<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getYanse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> yanse<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setYanse</span><span class="token punctuation">(</span>String yanse<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>yanse <span class="token operator">=</span> yanse<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNianling</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> nianling<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNianling</span><span class="token punctuation">(</span><span class="token keyword">int</span> nianling<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>nianling <span class="token operator">=</span> nianling<span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//无参构造方法</span>    <span class="token keyword">public</span> <span class="token function">gou</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//this() 可以调用带参的构造方法</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"无参的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//this() 会报错</span>    <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//有参构造方法</span>    <span class="token keyword">public</span> <span class="token function">gou</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span>String Col<span class="token punctuation">,</span><span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>nianling<span class="token operator">=</span>age<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>yanse<span class="token operator">=</span>Col<span class="token punctuation">;</span>        <span class="token function">yan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//static静态修饰符</span>    <span class="token comment" spellcheck="true">//    1. 静态方法只能访问静态变量</span>    <span class="token comment" spellcheck="true">//    2. 需要通过类名调用</span>    <span class="token comment" spellcheck="true">//    3. 所有对象共享静态变量</span>    <span class="token comment" spellcheck="true">//     4. 非静态可以访问静态的也可以访问非静态的</span>    <span class="token comment" spellcheck="true">//    5. 静态不能定义在方法类</span>    <span class="token keyword">public</span> <span class="token keyword">static</span>（静态） String dianming<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//打印方法</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">yan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我叫"</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">"今年"</span><span class="token operator">+</span>nianling<span class="token operator">+</span><span class="token string">"岁颜色是"</span><span class="token operator">+</span>yanse<span class="token operator">+</span><span class="token string">"居住在"</span><span class="token operator">+</span>dianming<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//静态代码块</span>    <span class="token comment" spellcheck="true">//    1. 静态代码块比无参构造方法优先</span>    <span class="token comment" spellcheck="true">//    2. 静态代码块只能执行一次</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"静态代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//常量</span>    <span class="token comment" spellcheck="true">//        1. 当被final修饰符改了必须要给他进行初始化，哪怕是个null也要赋值</span>    <span class="token keyword">public</span> <span class="token keyword">final</span> String name1<span class="token operator">=</span>null<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">final</span> String name2<span class="token operator">=</span><span class="token string">"藏獒"</span><span class="token punctuation">;</span>shuru类：<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shuru</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Scanner input<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入名字:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String mingzi<span class="token operator">=</span>input<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入颜色:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String yanse<span class="token operator">=</span>input<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入年龄:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> nianling<span class="token operator">=</span>input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gou gou<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">gou</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gou<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>mingzi<span class="token punctuation">)</span><span class="token punctuation">;</span>        gou<span class="token punctuation">.</span><span class="token function">setNianling</span><span class="token punctuation">(</span>nianling<span class="token punctuation">)</span><span class="token punctuation">;</span>        gou<span class="token punctuation">.</span><span class="token function">setYanse</span><span class="token punctuation">(</span>yanse<span class="token punctuation">)</span><span class="token punctuation">;</span>        gou<span class="token punctuation">.</span><span class="token function">yan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>mian方法（演示）：<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>        <span class="token comment" spellcheck="true">//无参构造方法</span>        gou<span class="token punctuation">.</span>dianming<span class="token operator">=</span><span class="token string">"河南郑州工人路"</span><span class="token punctuation">;</span>        gou gou<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">gou</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//自加</span>        gou<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"黄鹏涛"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gou<span class="token punctuation">.</span><span class="token function">setNianling</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gou<span class="token punctuation">.</span><span class="token function">setYanse</span><span class="token punctuation">(</span><span class="token string">"黄色"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gou<span class="token punctuation">.</span><span class="token function">yan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//输入</span>        tst ts<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">tst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ts<span class="token punctuation">.</span><span class="token function">shuru</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//有参构造方法</span>        gou gou2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">gou</span><span class="token punctuation">(</span><span class="token string">"黄鹏涛"</span><span class="token punctuation">,</span><span class="token string">"黄毛"</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//调用常量</span>        <span class="token comment" spellcheck="true">//不能再赋值</span>        <span class="token comment" spellcheck="true">//gou.name1="abc";    会报错</span>    <span class="token punctuation">}</span></code></pre><h4 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h4><pre class=" language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span> 继承需要用到：<span class="token keyword">extends</span>关键字    父类名<span class="token number">2</span><span class="token punctuation">.</span> <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>关键字可以调用父类不带参数的构造方法<span class="token number">3</span><span class="token punctuation">.</span> <span class="token keyword">super</span><span class="token punctuation">(</span>可以放参数<span class="token punctuation">)</span><span class="token punctuation">;</span>可以调用父类参数个数的构造方法<span class="token number">4</span><span class="token punctuation">.</span> 父类没有无参构造方法的时候，子类创建无参构造方法会报错，就得利用<span class="token keyword">super</span><span class="token punctuation">(</span>可以放参数<span class="token punctuation">)</span>这个关键字<span class="token number">5</span><span class="token punctuation">.</span> 子类如果没有定义构造方法时，必须保证父类有一个无参构造方法<span class="token number">6</span><span class="token punctuation">.</span> 父类使用访问修饰符<span class="token keyword">protected</span>关键字：只能子类可以调用<span class="token number">7</span><span class="token punctuation">.</span> 何时使用继承：子类是父类的情况下，子类就是父类，代码的重用<span class="token punctuation">(</span>有相同的属性<span class="token punctuation">)</span><span class="token number">8</span><span class="token punctuation">.</span> <span class="token annotation punctuation">@Override</span>关键字 重写，如果有一个英文错误就会报错。如果没有错误，可以不写<span class="token number">9</span><span class="token punctuation">.</span> 构造方法不能被重写<span class="token number">10</span><span class="token punctuation">.</span> 方法重写的规则：    <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span> 方法名与类名一样    <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span> 列表不相同    <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span> 在一个类中    <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span> 与返回值无关<span class="token number">11</span><span class="token punctuation">.</span> 用<span class="token keyword">abstract</span>抽象类：    <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span> 不能<span class="token keyword">new</span>出来    <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span> 抽象方法是不能有方法体的    <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span> 类中有抽象方法必定是抽象类<span class="token number">12</span><span class="token punctuation">.</span> <span class="token keyword">final</span><span class="token operator">:</span>    <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span> 修改类不能继承    <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span> 修改方法不能重写方法</code></pre><h4 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h4><pre class=" language-Java"><code class="language-Java">1. 多态是什么？    1). 继承的存在    2). 必须又重写    3). 父类引用变量指向子类对象2. 类名 变量名=new 类名()    //打印出类的地址   System.out.printin(变量名)   System.out.printin(变量名.ToString())   可以给ToString重写在打印可以打印出值3. == 比较内存地址     equals()比较内容4. 一个对象去调用equals()方法，如果这个类没有重写父类objact身上的equals()方法，那么比较的内容仍然是内存地址，本质用==时一样的5. 一个对象去调用equals()方法，如果这个类重写父类objact身上的equals()方法，那么比较的结果就是根据调用子类equals()方法返回结果</code></pre><h4 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h4><pre class=" language-java"><code class="language-java"></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令</title>
      <link href="/2021/06/13/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/06/13/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>git 窗口命令</p><pre class=" language-mysql"><code class="language-mysql">Create New Repository /*创建一个新的仓库*/Clone Existing Repository /*克隆一个存在仓库*/Open Existing Repository /*打开一个存在的仓库*/</code></pre><pre class=" language-MySQL"><code class="language-MySQL">/*命令*/ls /*当前目录*/git --version /*版本*/git init /*创建一个本地仓库*/</code></pre><p>GitHub操作</p><pre class=" language-mysql"><code class="language-mysql">/*GitHub操作*/git init /*初始化一个本地仓库*/git add README.md /*向本地仓库添加一个文件*/git commit -m "first commit" /*提交*/git remote add origin https://github.com/canerya/repo1.git /*本地仓库 与 远程仓库建立连接*/git push -u origin master /*把本地仓库的内容 推送到远程仓库*/ssh-keygen -t rsa</code></pre><pre class=" language-mysql"><code class="language-mysql">/*通讯协议*/HTTPS   需要用户名 密码SSH    /*安全外壳协议*/  需要秘钥 </code></pre><pre class=" language-mysql"><code class="language-mysql">/*克隆*/https://github.com/graykode/nlp-tutorialgithub.com.cnpmjs.orggit clone 协议git pull [master] /*拉取 [分支]*/git fetch [master] /*从远程仓库合并代码到自己的本地仓库*/git merge [master] /*从自己的本地仓库合并代码到自己的工作区*/git pull = git fetch + git merge</code></pre><p>码云操作</p><pre class=" language-mysql"><code class="language-mysql">/*生成SSH 公钥*/ssh-keygen -t rsa -C "2960634562@qq.com"/*测试连接 测试本机是否获取信任*/ssh -T git@gitee.com</code></pre><p><img src="C:\Users\Administrator\Desktop\Blog\canerBlog_github\canerne.github.io\source_posts\image-20200822222615348.png" alt="image-20200822222615348"></p><p><img src="C:\Users\Administrator\Desktop\Blog\canerBlog_github\canerne.github.io\source_posts\image-20200822230911234.png" alt="image-20200822230911234"><img src="C:\Users\Administrator\Desktop\Blog\canerBlog_github\canerne.github.io\source_posts\image-20200822232640525.png" alt="image-20200822232640525"></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chrome 开发</title>
      <link href="/2021/06/13/chrome%20%E5%BC%80%E5%8F%91/"/>
      <url>/2021/06/13/chrome%20%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文章测试2</title>
      <link href="/2021/06/13/%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%952/"/>
      <url>/2021/06/13/%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%952/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文章测试</title>
      <link href="/2021/06/13/%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/06/13/%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<hr><p>title: typora-vue-theme主题介绍<br>date: 2021-06-07 09:25:00<br>author: caner<br>img: /source/images/xxx.jpg<br>top: true<br>cover: true<br>coverImg: /images/1.jpg<br>password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<br>toc: false<br>mathjax: false<br>summary: “这是文章测试的第一篇！”<br>categories: Markdown<br>tags: - Typora - Markdown </p><hr><h1 id="这是文章测试"><a href="#这是文章测试" class="headerlink" title="这是文章测试"></a>这是文章测试</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/12/hello-world/"/>
      <url>/2021/06/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
